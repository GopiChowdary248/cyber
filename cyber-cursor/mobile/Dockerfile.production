FROM node:18-alpine

# Set environment variables
ENV NODE_ENV=production
ENV EXPO_API_URL=http://localhost:8000/api/v1

# Set work directory
WORKDIR /app

# Install system dependencies
RUN apk add --no-cache \
    curl \
    git \
    bash \
    nginx

# Copy package files
COPY package*.json ./

# Install dependencies
RUN npm install

# Copy source code
COPY . .

# Create a simple static HTML file for the mobile app
RUN mkdir -p /app/web-build && \
    echo '<!DOCTYPE html>\
<html lang="en">\
<head>\
    <meta charset="UTF-8">\
    <meta name="viewport" content="width=device-width, initial-scale=1.0">\
    <title>CyberShield Mobile</title>\
    <style>\
        body { font-family: Arial, sans-serif; margin: 0; padding: 20px; background: #1a1a1a; color: white; }\
        .container { max-width: 600px; margin: 0 auto; }\
        .header { text-align: center; margin-bottom: 30px; }\
        .card { background: #2a2a2a; padding: 20px; border-radius: 10px; margin-bottom: 20px; }\
        .status { padding: 10px; border-radius: 5px; margin: 10px 0; }\
        .success { background: #4CAF50; }\
        .info { background: #2196F3; }\
        .warning { background: #FF9800; }\
        .error { background: #f44336; }\
        .feature-list { list-style: none; padding: 0; }\
        .feature-list li { padding: 10px 0; border-bottom: 1px solid #444; }\
        .feature-list li:last-child { border-bottom: none; }\
    </style>\
</head>\
<body>\
    <div class="container">\
        <div class="header">\
            <h1>🛡️ CyberShield Mobile</h1>\
            <p>React Native Security Application</p>\
        </div>\
        <div class="card">\
            <h2>Application Status</h2>\
            <div class="status success">✅ Mobile App Running</div>\
            <div class="status info">🌐 Accessible via Web Interface</div>\
            <div class="status info">📱 React Native Components Ready</div>\
        </div>\
        <div class="card">\
            <h2>Available Features</h2>\
            <ul class="feature-list">\
                <li>🔍 SAST (Static Application Security Testing)</li>\
                <li>🌐 DAST (Dynamic Application Security Testing)</li>\
                <li>🛡️ RASP (Runtime Application Self-Protection)</li>\
                <li>📊 Security Dashboards</li>\
                <li>🔐 Authentication & Authorization</li>\
                <li>📈 Real-time Monitoring</li>\
                <li>📋 Compliance Reporting</li>\
                <li>🤖 AI/ML Security Analytics</li>\
            </ul>\
        </div>\
        <div class="card">\
            <h2>Access Points</h2>\
            <div class="status info">🌐 Web App: <a href="http://localhost:3000" style="color: white;">http://localhost:3000</a></div>\
            <div class="status info">🔧 API: <a href="http://localhost:8000/docs" style="color: white;">http://localhost:8000/docs</a></div>\
            <div class="status info">📱 Mobile: <a href="http://localhost:19002" style="color: white;">http://localhost:19002</a></div>\
        </div>\
        <div class="card">\
            <h2>Login Credentials</h2>\
            <div class="status warning">👤 Admin: admin@example.com / admin123</div>\
            <div class="status warning">👤 User: user@example.com / user123</div>\
        </div>\
    </div>\
</body>\
</html>' > /app/web-build/index.html

# Create nginx configuration for serving the built app
RUN echo 'server { \
    listen 19002; \
    server_name localhost; \
    root /app/web-build; \
    index index.html; \
    location / { \
        try_files $uri $uri/ /index.html; \
    } \
    location /static/ { \
        expires 1y; \
        add_header Cache-Control "public, immutable"; \
    } \
}' > /etc/nginx/http.d/default.conf

# Create non-root user
RUN addgroup -g 1001 -S nodejs \
    && adduser -S expo -u 1001

# Change ownership
RUN chown -R expo:nodejs /app
USER expo

# Expose ports
EXPOSE 19002

# Start nginx to serve the built app
CMD ["nginx", "-g", "daemon off;"] 