"""Add user authentication and basic models

Revision ID: 795b5b430b1d
Revises: 005
Create Date: 2025-08-11 20:57:41.689709

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import sqlite

# revision identifiers, used by Alembic.
revision = '795b5b430b1d'
down_revision = '005'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_project_issues_id'), table_name='project_issues')
    op.drop_table('project_issues')
    op.drop_index(op.f('ix_team_members_id'), table_name='team_members')
    op.drop_table('team_members')
    op.drop_index(op.f('ix_teams_id'), table_name='teams')
    op.drop_table('teams')
    op.drop_index(op.f('ix_project_scans_id'), table_name='project_scans')
    op.drop_table('project_scans')
    op.drop_index(op.f('ix_projects_id'), table_name='projects')
    op.drop_index(op.f('ix_projects_key'), table_name='projects')
    op.drop_index(op.f('ix_projects_name'), table_name='projects')
    op.drop_table('projects')
    op.alter_column('dast_payloads', 'id',
               existing_type=sa.NUMERIC(),
               type_=sa.UUID(),
               existing_nullable=False)
    op.alter_column('dast_projects', 'id',
               existing_type=sa.NUMERIC(),
               type_=sa.UUID(),
               existing_nullable=False)
    op.alter_column('dast_reports', 'id',
               existing_type=sa.NUMERIC(),
               type_=sa.UUID(),
               existing_nullable=False)
    op.alter_column('dast_reports', 'scan_id',
               existing_type=sa.NUMERIC(),
               type_=sa.UUID(),
               existing_nullable=False)
    op.alter_column('dast_reports', 'project_id',
               existing_type=sa.NUMERIC(),
               type_=sa.UUID(),
               existing_nullable=False)
    op.alter_column('dast_scans', 'id',
               existing_type=sa.NUMERIC(),
               type_=sa.UUID(),
               existing_nullable=False)
    op.alter_column('dast_scans', 'project_id',
               existing_type=sa.NUMERIC(),
               type_=sa.UUID(),
               existing_nullable=False)
    op.alter_column('dast_sessions', 'id',
               existing_type=sa.NUMERIC(),
               type_=sa.UUID(),
               existing_nullable=False)
    op.alter_column('dast_sessions', 'project_id',
               existing_type=sa.NUMERIC(),
               type_=sa.UUID(),
               existing_nullable=False)
    op.alter_column('dast_vulnerabilities', 'id',
               existing_type=sa.NUMERIC(),
               type_=sa.UUID(),
               existing_nullable=False)
    op.alter_column('dast_vulnerabilities', 'scan_id',
               existing_type=sa.NUMERIC(),
               type_=sa.UUID(),
               existing_nullable=False)
    op.alter_column('dast_vulnerabilities', 'project_id',
               existing_type=sa.NUMERIC(),
               type_=sa.UUID(),
               existing_nullable=False)
    op.alter_column('device_events', 'id',
               existing_type=sa.NUMERIC(),
               type_=sa.UUID(),
               existing_nullable=False)
    op.alter_column('device_events', 'device_id',
               existing_type=sa.NUMERIC(),
               type_=sa.UUID(),
               existing_nullable=False)
    op.alter_column('device_events', 'policy_id',
               existing_type=sa.NUMERIC(),
               type_=sa.UUID(),
               existing_nullable=True)
    op.alter_column('device_policies', 'id',
               existing_type=sa.NUMERIC(),
               type_=sa.UUID(),
               existing_nullable=False)
    op.alter_column('devices', 'id',
               existing_type=sa.NUMERIC(),
               type_=sa.UUID(),
               existing_nullable=False)
    op.alter_column('sast_code_coverage', 'id',
               existing_type=sa.INTEGER(),
               nullable=False,
               autoincrement=True)
    op.create_index(op.f('ix_sast_code_coverage_id'), 'sast_code_coverage', ['id'], unique=False)
    op.alter_column('sast_duplications', 'id',
               existing_type=sa.INTEGER(),
               nullable=False,
               autoincrement=True)
    op.create_index(op.f('ix_sast_duplications_id'), 'sast_duplications', ['id'], unique=False)
    op.alter_column('sast_issues', 'id',
               existing_type=sa.INTEGER(),
               nullable=False,
               autoincrement=True)
    op.alter_column('sast_issues', 'severity',
               existing_type=sa.VARCHAR(length=20),
               type_=sa.Enum('BLOCKER', 'CRITICAL', 'MAJOR', 'MINOR', 'INFO', name='issueseverity'),
               existing_nullable=False)
    op.alter_column('sast_issues', 'type',
               existing_type=sa.VARCHAR(length=20),
               type_=sa.Enum('BUG', 'VULNERABILITY', 'CODE_SMELL', 'SECURITY_HOTSPOT', name='issuetype'),
               existing_nullable=False)
    op.alter_column('sast_issues', 'status',
               existing_type=sa.VARCHAR(length=20),
               type_=sa.Enum('OPEN', 'CONFIRMED', 'RESOLVED', 'CLOSED', 'REOPENED', name='issuestatus'),
               existing_nullable=True,
               existing_server_default=sa.text("'OPEN'"))
    op.alter_column('sast_issues', 'resolution',
               existing_type=sa.VARCHAR(length=20),
               type_=sa.Enum('FIXED', 'WONTFIX', 'FALSE_POSITIVE', 'ACCEPTED', name='issueresolution'),
               existing_nullable=True,
               existing_server_default=sa.text("'FALSE_POSITIVE'"))
    op.alter_column('sast_issues', 'tags',
               existing_type=sa.TEXT(),
               type_=sa.JSON(),
               existing_nullable=True)
    op.drop_index(op.f('idx_sast_issues_project_id'), table_name='sast_issues')
    op.drop_index(op.f('idx_sast_issues_severity'), table_name='sast_issues')
    op.create_index(op.f('ix_sast_issues_id'), 'sast_issues', ['id'], unique=False)
    op.add_column('sast_projects', sa.Column('lines_of_comment', sa.Integer(), nullable=True))
    op.alter_column('sast_projects', 'id',
               existing_type=sa.INTEGER(),
               nullable=False,
               autoincrement=True)
    op.alter_column('sast_projects', 'quality_gate',
               existing_type=sa.VARCHAR(length=20),
               type_=sa.Enum('PASSED', 'FAILED', 'WARNING', name='qualitygatestatus'),
               existing_nullable=True,
               existing_server_default=sa.text("'PASSED'"))
    op.drop_index(op.f('idx_sast_projects_key'), table_name='sast_projects')
    op.drop_index(op.f('idx_sast_projects_language'), table_name='sast_projects')
    op.create_index(op.f('ix_sast_projects_id'), 'sast_projects', ['id'], unique=False)
    op.create_index(op.f('ix_sast_projects_key'), 'sast_projects', ['key'], unique=True)
    op.alter_column('sast_quality_gates', 'id',
               existing_type=sa.INTEGER(),
               nullable=False,
               autoincrement=True)
    op.alter_column('sast_quality_gates', 'status',
               existing_type=sa.VARCHAR(length=20),
               type_=sa.Enum('PASSED', 'FAILED', 'WARNING', name='qualitygatestatus'),
               existing_nullable=True,
               existing_server_default=sa.text("'PASSED'"))
    op.alter_column('sast_quality_gates', 'evaluation_results',
               existing_type=sa.TEXT(),
               type_=sa.JSON(),
               existing_nullable=True)
    op.create_index(op.f('ix_sast_quality_gates_id'), 'sast_quality_gates', ['id'], unique=False)
    op.alter_column('sast_scans', 'id',
               existing_type=sa.INTEGER(),
               nullable=False,
               autoincrement=True)
    op.alter_column('sast_scans', 'status',
               existing_type=sa.VARCHAR(length=20),
               type_=sa.Enum('PENDING', 'IN_PROGRESS', 'COMPLETED', 'FAILED', 'CANCELLED', name='scanstatus'),
               existing_nullable=True,
               existing_server_default=sa.text("'PENDING'"))
    op.drop_index(op.f('idx_sast_scans_project_id'), table_name='sast_scans')
    op.create_index(op.f('ix_sast_scans_id'), 'sast_scans', ['id'], unique=False)
    op.alter_column('sast_security_hotspots', 'id',
               existing_type=sa.INTEGER(),
               nullable=False,
               autoincrement=True)
    op.alter_column('sast_security_hotspots', 'status',
               existing_type=sa.VARCHAR(length=20),
               type_=sa.Enum('TO_REVIEW', 'REVIEWED', 'FIXED', name='securityhotspotstatus'),
               existing_nullable=True,
               existing_server_default=sa.text("'TO_REVIEW'"))
    op.alter_column('sast_security_hotspots', 'resolution',
               existing_type=sa.VARCHAR(length=20),
               type_=sa.Enum('FIXED', 'SAFE', 'ACKNOWLEDGED', name='securityhotspotresolution'),
               existing_nullable=True)
    op.alter_column('sast_security_hotspots', 'tags',
               existing_type=sa.TEXT(),
               type_=sa.JSON(),
               existing_nullable=True)
    op.create_index(op.f('ix_sast_security_hotspots_id'), 'sast_security_hotspots', ['id'], unique=False)
    op.add_column('users', sa.Column('is_superuser', sa.Boolean(), nullable=True))
    op.add_column('users', sa.Column('department', sa.String(length=100), nullable=True))
    op.add_column('users', sa.Column('phone', sa.String(length=20), nullable=True))
    op.add_column('users', sa.Column('avatar_url', sa.String(length=255), nullable=True))
    op.add_column('users', sa.Column('two_factor_enabled', sa.Boolean(), nullable=True))
    op.add_column('users', sa.Column('two_factor_secret', sa.String(length=255), nullable=True))
    op.add_column('users', sa.Column('preferences', sa.JSON(), nullable=True))
    op.alter_column('users', 'id',
               existing_type=sa.INTEGER(),
               nullable=False,
               autoincrement=True)
    op.alter_column('users', 'email',
               existing_type=sa.VARCHAR(length=255),
               type_=sa.String(length=100),
               existing_nullable=False)
    op.alter_column('users', 'username',
               existing_type=sa.VARCHAR(length=100),
               type_=sa.String(length=50),
               existing_nullable=False)
    op.alter_column('users', 'full_name',
               existing_type=sa.VARCHAR(length=255),
               type_=sa.String(length=100),
               existing_nullable=True)
    op.drop_index(op.f('idx_users_email'), table_name='users')
    op.drop_index(op.f('idx_users_username'), table_name='users')
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.create_index(op.f('idx_users_username'), 'users', ['username'], unique=False)
    op.create_index(op.f('idx_users_email'), 'users', ['email'], unique=False)
    op.alter_column('users', 'full_name',
               existing_type=sa.String(length=100),
               type_=sa.VARCHAR(length=255),
               existing_nullable=True)
    op.alter_column('users', 'username',
               existing_type=sa.String(length=50),
               type_=sa.VARCHAR(length=100),
               existing_nullable=False)
    op.alter_column('users', 'email',
               existing_type=sa.String(length=100),
               type_=sa.VARCHAR(length=255),
               existing_nullable=False)
    op.alter_column('users', 'id',
               existing_type=sa.INTEGER(),
               nullable=True,
               autoincrement=True)
    op.drop_column('users', 'preferences')
    op.drop_column('users', 'two_factor_secret')
    op.drop_column('users', 'two_factor_enabled')
    op.drop_column('users', 'avatar_url')
    op.drop_column('users', 'phone')
    op.drop_column('users', 'department')
    op.drop_column('users', 'is_superuser')
    op.drop_index(op.f('ix_sast_security_hotspots_id'), table_name='sast_security_hotspots')
    op.alter_column('sast_security_hotspots', 'tags',
               existing_type=sa.JSON(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('sast_security_hotspots', 'resolution',
               existing_type=sa.Enum('FIXED', 'SAFE', 'ACKNOWLEDGED', name='securityhotspotresolution'),
               type_=sa.VARCHAR(length=20),
               existing_nullable=True)
    op.alter_column('sast_security_hotspots', 'status',
               existing_type=sa.Enum('TO_REVIEW', 'REVIEWED', 'FIXED', name='securityhotspotstatus'),
               type_=sa.VARCHAR(length=20),
               existing_nullable=True,
               existing_server_default=sa.text("'TO_REVIEW'"))
    op.alter_column('sast_security_hotspots', 'id',
               existing_type=sa.INTEGER(),
               nullable=True,
               autoincrement=True)
    op.drop_index(op.f('ix_sast_scans_id'), table_name='sast_scans')
    op.create_index(op.f('idx_sast_scans_project_id'), 'sast_scans', ['project_id'], unique=False)
    op.alter_column('sast_scans', 'status',
               existing_type=sa.Enum('PENDING', 'IN_PROGRESS', 'COMPLETED', 'FAILED', 'CANCELLED', name='scanstatus'),
               type_=sa.VARCHAR(length=20),
               existing_nullable=True,
               existing_server_default=sa.text("'PENDING'"))
    op.alter_column('sast_scans', 'id',
               existing_type=sa.INTEGER(),
               nullable=True,
               autoincrement=True)
    op.drop_index(op.f('ix_sast_quality_gates_id'), table_name='sast_quality_gates')
    op.alter_column('sast_quality_gates', 'evaluation_results',
               existing_type=sa.JSON(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('sast_quality_gates', 'status',
               existing_type=sa.Enum('PASSED', 'FAILED', 'WARNING', name='qualitygatestatus'),
               type_=sa.VARCHAR(length=20),
               existing_nullable=True,
               existing_server_default=sa.text("'PASSED'"))
    op.alter_column('sast_quality_gates', 'id',
               existing_type=sa.INTEGER(),
               nullable=True,
               autoincrement=True)
    op.drop_index(op.f('ix_sast_projects_key'), table_name='sast_projects')
    op.drop_index(op.f('ix_sast_projects_id'), table_name='sast_projects')
    op.create_index(op.f('idx_sast_projects_language'), 'sast_projects', ['language'], unique=False)
    op.create_index(op.f('idx_sast_projects_key'), 'sast_projects', ['key'], unique=False)
    op.alter_column('sast_projects', 'quality_gate',
               existing_type=sa.Enum('PASSED', 'FAILED', 'WARNING', name='qualitygatestatus'),
               type_=sa.VARCHAR(length=20),
               existing_nullable=True,
               existing_server_default=sa.text("'PASSED'"))
    op.alter_column('sast_projects', 'id',
               existing_type=sa.INTEGER(),
               nullable=True,
               autoincrement=True)
    op.drop_column('sast_projects', 'lines_of_comment')
    op.drop_index(op.f('ix_sast_issues_id'), table_name='sast_issues')
    op.create_index(op.f('idx_sast_issues_severity'), 'sast_issues', ['severity'], unique=False)
    op.create_index(op.f('idx_sast_issues_project_id'), 'sast_issues', ['project_id'], unique=False)
    op.alter_column('sast_issues', 'tags',
               existing_type=sa.JSON(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('sast_issues', 'resolution',
               existing_type=sa.Enum('FIXED', 'WONTFIX', 'FALSE_POSITIVE', 'ACCEPTED', name='issueresolution'),
               type_=sa.VARCHAR(length=20),
               existing_nullable=True,
               existing_server_default=sa.text("'FALSE_POSITIVE'"))
    op.alter_column('sast_issues', 'status',
               existing_type=sa.Enum('OPEN', 'CONFIRMED', 'RESOLVED', 'CLOSED', 'REOPENED', name='issuestatus'),
               type_=sa.VARCHAR(length=20),
               existing_nullable=True,
               existing_server_default=sa.text("'OPEN'"))
    op.alter_column('sast_issues', 'type',
               existing_type=sa.Enum('BUG', 'VULNERABILITY', 'CODE_SMELL', 'SECURITY_HOTSPOT', name='issuetype'),
               type_=sa.VARCHAR(length=20),
               existing_nullable=False)
    op.alter_column('sast_issues', 'severity',
               existing_type=sa.Enum('BLOCKER', 'CRITICAL', 'MAJOR', 'MINOR', 'INFO', name='issueseverity'),
               type_=sa.VARCHAR(length=20),
               existing_nullable=False)
    op.alter_column('sast_issues', 'id',
               existing_type=sa.INTEGER(),
               nullable=True,
               autoincrement=True)
    op.drop_index(op.f('ix_sast_duplications_id'), table_name='sast_duplications')
    op.alter_column('sast_duplications', 'id',
               existing_type=sa.INTEGER(),
               nullable=True,
               autoincrement=True)
    op.drop_index(op.f('ix_sast_code_coverage_id'), table_name='sast_code_coverage')
    op.alter_column('sast_code_coverage', 'id',
               existing_type=sa.INTEGER(),
               nullable=True,
               autoincrement=True)
    op.alter_column('devices', 'id',
               existing_type=sa.UUID(),
               type_=sa.NUMERIC(),
               existing_nullable=False)
    op.alter_column('device_policies', 'id',
               existing_type=sa.UUID(),
               type_=sa.NUMERIC(),
               existing_nullable=False)
    op.alter_column('device_events', 'policy_id',
               existing_type=sa.UUID(),
               type_=sa.NUMERIC(),
               existing_nullable=True)
    op.alter_column('device_events', 'device_id',
               existing_type=sa.UUID(),
               type_=sa.NUMERIC(),
               existing_nullable=False)
    op.alter_column('device_events', 'id',
               existing_type=sa.UUID(),
               type_=sa.NUMERIC(),
               existing_nullable=False)
    op.alter_column('dast_vulnerabilities', 'project_id',
               existing_type=sa.UUID(),
               type_=sa.NUMERIC(),
               existing_nullable=False)
    op.alter_column('dast_vulnerabilities', 'scan_id',
               existing_type=sa.UUID(),
               type_=sa.NUMERIC(),
               existing_nullable=False)
    op.alter_column('dast_vulnerabilities', 'id',
               existing_type=sa.UUID(),
               type_=sa.NUMERIC(),
               existing_nullable=False)
    op.alter_column('dast_sessions', 'project_id',
               existing_type=sa.UUID(),
               type_=sa.NUMERIC(),
               existing_nullable=False)
    op.alter_column('dast_sessions', 'id',
               existing_type=sa.UUID(),
               type_=sa.NUMERIC(),
               existing_nullable=False)
    op.alter_column('dast_scans', 'project_id',
               existing_type=sa.UUID(),
               type_=sa.NUMERIC(),
               existing_nullable=False)
    op.alter_column('dast_scans', 'id',
               existing_type=sa.UUID(),
               type_=sa.NUMERIC(),
               existing_nullable=False)
    op.alter_column('dast_reports', 'project_id',
               existing_type=sa.UUID(),
               type_=sa.NUMERIC(),
               existing_nullable=False)
    op.alter_column('dast_reports', 'scan_id',
               existing_type=sa.UUID(),
               type_=sa.NUMERIC(),
               existing_nullable=False)
    op.alter_column('dast_reports', 'id',
               existing_type=sa.UUID(),
               type_=sa.NUMERIC(),
               existing_nullable=False)
    op.alter_column('dast_projects', 'id',
               existing_type=sa.UUID(),
               type_=sa.NUMERIC(),
               existing_nullable=False)
    op.alter_column('dast_payloads', 'id',
               existing_type=sa.UUID(),
               type_=sa.NUMERIC(),
               existing_nullable=False)
    op.create_table('projects',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), nullable=False),
    sa.Column('key', sa.VARCHAR(length=255), nullable=False),
    sa.Column('description', sa.TEXT(), nullable=True),
    sa.Column('project_type', sa.VARCHAR(length=7), nullable=True),
    sa.Column('status', sa.VARCHAR(length=8), nullable=True),
    sa.Column('repository_type', sa.VARCHAR(length=5), nullable=True),
    sa.Column('repository_url', sa.VARCHAR(length=500), nullable=True),
    sa.Column('repository_branch', sa.VARCHAR(length=100), nullable=True),
    sa.Column('repository_username', sa.VARCHAR(length=255), nullable=True),
    sa.Column('repository_token', sa.VARCHAR(length=500), nullable=True),
    sa.Column('source_path', sa.VARCHAR(length=500), nullable=True),
    sa.Column('language', sa.VARCHAR(length=50), nullable=True),
    sa.Column('framework', sa.VARCHAR(length=100), nullable=True),
    sa.Column('tags', sqlite.JSON(), nullable=True),
    sa.Column('project_metadata', sqlite.JSON(), nullable=True),
    sa.Column('security_level', sa.VARCHAR(length=50), nullable=True),
    sa.Column('compliance_frameworks', sqlite.JSON(), nullable=True),
    sa.Column('created_by', sa.INTEGER(), nullable=False),
    sa.Column('owner_id', sa.INTEGER(), nullable=False),
    sa.Column('team_id', sa.INTEGER(), nullable=True),
    sa.Column('created_at', sa.DATETIME(), nullable=True),
    sa.Column('updated_at', sa.DATETIME(), nullable=True),
    sa.Column('last_scan', sa.DATETIME(), nullable=True),
    sa.Column('last_sync', sa.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['owner_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['team_id'], ['teams.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_projects_name'), 'projects', ['name'], unique=False)
    op.create_index(op.f('ix_projects_key'), 'projects', ['key'], unique=1)
    op.create_index(op.f('ix_projects_id'), 'projects', ['id'], unique=False)
    op.create_table('project_scans',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('project_id', sa.INTEGER(), nullable=False),
    sa.Column('scan_type', sa.VARCHAR(length=50), nullable=False),
    sa.Column('scan_name', sa.VARCHAR(length=255), nullable=False),
    sa.Column('scan_config', sqlite.JSON(), nullable=True),
    sa.Column('status', sa.VARCHAR(length=50), nullable=True),
    sa.Column('progress', sa.INTEGER(), nullable=True),
    sa.Column('total_issues', sa.INTEGER(), nullable=True),
    sa.Column('critical_issues', sa.INTEGER(), nullable=True),
    sa.Column('high_issues', sa.INTEGER(), nullable=True),
    sa.Column('medium_issues', sa.INTEGER(), nullable=True),
    sa.Column('low_issues', sa.INTEGER(), nullable=True),
    sa.Column('scan_duration', sa.INTEGER(), nullable=True),
    sa.Column('files_scanned', sa.INTEGER(), nullable=True),
    sa.Column('lines_scanned', sa.INTEGER(), nullable=True),
    sa.Column('error_message', sa.TEXT(), nullable=True),
    sa.Column('error_details', sqlite.JSON(), nullable=True),
    sa.Column('started_by', sa.INTEGER(), nullable=False),
    sa.Column('started_at', sa.DATETIME(), nullable=True),
    sa.Column('completed_at', sa.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ),
    sa.ForeignKeyConstraint(['started_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_project_scans_id'), 'project_scans', ['id'], unique=False)
    op.create_table('teams',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), nullable=False),
    sa.Column('description', sa.TEXT(), nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), nullable=True),
    sa.Column('team_type', sa.VARCHAR(length=50), nullable=True),
    sa.Column('created_by', sa.INTEGER(), nullable=False),
    sa.Column('created_at', sa.DATETIME(), nullable=True),
    sa.Column('updated_at', sa.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_teams_id'), 'teams', ['id'], unique=False)
    op.create_table('team_members',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('team_id', sa.INTEGER(), nullable=False),
    sa.Column('user_id', sa.INTEGER(), nullable=False),
    sa.Column('role', sa.VARCHAR(length=50), nullable=True),
    sa.Column('joined_at', sa.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['team_id'], ['teams.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_team_members_id'), 'team_members', ['id'], unique=False)
    op.create_table('project_issues',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('project_id', sa.INTEGER(), nullable=False),
    sa.Column('scan_id', sa.INTEGER(), nullable=True),
    sa.Column('issue_type', sa.VARCHAR(length=50), nullable=False),
    sa.Column('severity', sa.VARCHAR(length=20), nullable=False),
    sa.Column('status', sa.VARCHAR(length=20), nullable=True),
    sa.Column('title', sa.VARCHAR(length=500), nullable=False),
    sa.Column('description', sa.TEXT(), nullable=True),
    sa.Column('recommendation', sa.TEXT(), nullable=True),
    sa.Column('file_path', sa.VARCHAR(length=500), nullable=True),
    sa.Column('line_number', sa.INTEGER(), nullable=True),
    sa.Column('start_line', sa.INTEGER(), nullable=True),
    sa.Column('end_line', sa.INTEGER(), nullable=True),
    sa.Column('cwe_id', sa.VARCHAR(length=20), nullable=True),
    sa.Column('cvss_score', sa.FLOAT(), nullable=True),
    sa.Column('owasp_category', sa.VARCHAR(length=100), nullable=True),
    sa.Column('assigned_to', sa.INTEGER(), nullable=True),
    sa.Column('created_by', sa.INTEGER(), nullable=True),
    sa.Column('created_at', sa.DATETIME(), nullable=True),
    sa.Column('updated_at', sa.DATETIME(), nullable=True),
    sa.Column('resolved_at', sa.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['assigned_to'], ['users.id'], ),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ),
    sa.ForeignKeyConstraint(['scan_id'], ['project_scans.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_project_issues_id'), 'project_issues', ['id'], unique=False)
    # ### end Alembic commands ### 