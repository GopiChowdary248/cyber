{"ast":null,"code":"import axios from 'axios';\n\n// Create axios instance with default configuration\nconst apiClient = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:8000',\n  timeout: 30000,\n  // Increased timeout for complex operations\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Request interceptor to add auth token\napiClient.interceptors.request.use(config => {\n  const token = localStorage.getItem('access_token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Response interceptor for error handling\napiClient.interceptors.response.use(response => response, async error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    // Token expired or invalid, redirect to login\n    localStorage.removeItem('access_token');\n    localStorage.removeItem('user');\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\n\n// Generic API methods\nexport const api = {\n  // GET request\n  get: (url, config) => apiClient.get(url, config).then(response => response.data),\n  // POST request\n  post: (url, data, config) => apiClient.post(url, data, config).then(response => response.data),\n  // PUT request\n  put: (url, data, config) => apiClient.put(url, data, config).then(response => response.data),\n  // DELETE request\n  delete: (url, config) => apiClient.delete(url, config).then(response => response.data),\n  // PATCH request\n  patch: (url, data, config) => apiClient.patch(url, data, config).then(response => response.data)\n};\nexport default apiClient;","map":{"version":3,"names":["axios","apiClient","create","baseURL","process","env","REACT_APP_API_URL","timeout","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","_error$response","status","removeItem","window","location","href","api","get","url","then","data","post","put","delete","patch"],"sources":["D:/curser/copy-of-git-10-082025/cyber-cursor/frontend/src/services/apiClient.ts"],"sourcesContent":["import axios, { AxiosError, AxiosResponse, AxiosRequestConfig } from 'axios';\r\n\r\n// Create axios instance with default configuration\r\nconst apiClient = axios.create({\r\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:8000',\r\n  timeout: 30000, // Increased timeout for complex operations\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Request interceptor to add auth token\r\napiClient.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem('access_token');\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Response interceptor for error handling\r\napiClient.interceptors.response.use(\r\n  (response: AxiosResponse) => response,\r\n  async (error: AxiosError) => {\r\n    if (error.response?.status === 401) {\r\n      // Token expired or invalid, redirect to login\r\n      localStorage.removeItem('access_token');\r\n      localStorage.removeItem('user');\r\n      window.location.href = '/login';\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Generic API methods\r\nexport const api = {\r\n  // GET request\r\n  get: <T = any>(url: string, config?: AxiosRequestConfig): Promise<T> =>\r\n    apiClient.get(url, config).then(response => response.data),\r\n\r\n  // POST request\r\n  post: <T = any>(url: string, data?: any, config?: AxiosRequestConfig): Promise<T> =>\r\n    apiClient.post(url, data, config).then(response => response.data),\r\n\r\n  // PUT request\r\n  put: <T = any>(url: string, data?: any, config?: AxiosRequestConfig): Promise<T> =>\r\n    apiClient.put(url, data, config).then(response => response.data),\r\n\r\n  // DELETE request\r\n  delete: <T = any>(url: string, config?: AxiosRequestConfig): Promise<T> =>\r\n    apiClient.delete(url, config).then(response => response.data),\r\n\r\n  // PATCH request\r\n  patch: <T = any>(url: string, data?: any, config?: AxiosRequestConfig): Promise<T> =>\r\n    apiClient.patch(url, data, config).then(response => response.data),\r\n};\r\n\r\nexport default apiClient;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAyD,OAAO;;AAE5E;AACA,MAAMC,SAAS,GAAGD,KAAK,CAACE,MAAM,CAAC;EAC7BC,OAAO,EAAEC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,uBAAuB;EACjEC,OAAO,EAAE,KAAK;EAAE;EAChBC,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACAP,SAAS,CAACQ,YAAY,CAACC,OAAO,CAACC,GAAG,CAC/BC,MAAM,IAAK;EACV,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;EAClD,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACJ,OAAO,CAACQ,aAAa,GAAG,UAAUH,KAAK,EAAE;EAClD;EACA,OAAOD,MAAM;AACf,CAAC,EACAK,KAAK,IAAK;EACT,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACAhB,SAAS,CAACQ,YAAY,CAACW,QAAQ,CAACT,GAAG,CAChCS,QAAuB,IAAKA,QAAQ,EACrC,MAAOH,KAAiB,IAAK;EAAA,IAAAI,eAAA;EAC3B,IAAI,EAAAA,eAAA,GAAAJ,KAAK,CAACG,QAAQ,cAAAC,eAAA,uBAAdA,eAAA,CAAgBC,MAAM,MAAK,GAAG,EAAE;IAClC;IACAR,YAAY,CAACS,UAAU,CAAC,cAAc,CAAC;IACvCT,YAAY,CAACS,UAAU,CAAC,MAAM,CAAC;IAC/BC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,QAAQ;EACjC;EACA,OAAOR,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACA,OAAO,MAAMU,GAAG,GAAG;EACjB;EACAC,GAAG,EAAEA,CAAUC,GAAW,EAAEjB,MAA2B,KACrDX,SAAS,CAAC2B,GAAG,CAACC,GAAG,EAAEjB,MAAM,CAAC,CAACkB,IAAI,CAACV,QAAQ,IAAIA,QAAQ,CAACW,IAAI,CAAC;EAE5D;EACAC,IAAI,EAAEA,CAAUH,GAAW,EAAEE,IAAU,EAAEnB,MAA2B,KAClEX,SAAS,CAAC+B,IAAI,CAACH,GAAG,EAAEE,IAAI,EAAEnB,MAAM,CAAC,CAACkB,IAAI,CAACV,QAAQ,IAAIA,QAAQ,CAACW,IAAI,CAAC;EAEnE;EACAE,GAAG,EAAEA,CAAUJ,GAAW,EAAEE,IAAU,EAAEnB,MAA2B,KACjEX,SAAS,CAACgC,GAAG,CAACJ,GAAG,EAAEE,IAAI,EAAEnB,MAAM,CAAC,CAACkB,IAAI,CAACV,QAAQ,IAAIA,QAAQ,CAACW,IAAI,CAAC;EAElE;EACAG,MAAM,EAAEA,CAAUL,GAAW,EAAEjB,MAA2B,KACxDX,SAAS,CAACiC,MAAM,CAACL,GAAG,EAAEjB,MAAM,CAAC,CAACkB,IAAI,CAACV,QAAQ,IAAIA,QAAQ,CAACW,IAAI,CAAC;EAE/D;EACAI,KAAK,EAAEA,CAAUN,GAAW,EAAEE,IAAU,EAAEnB,MAA2B,KACnEX,SAAS,CAACkC,KAAK,CAACN,GAAG,EAAEE,IAAI,EAAEnB,MAAM,CAAC,CAACkB,IAAI,CAACV,QAAQ,IAAIA,QAAQ,CAACW,IAAI;AACrE,CAAC;AAED,eAAe9B,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}