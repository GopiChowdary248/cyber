{"ast":null,"code":"var _jsxFileName = \"D:\\\\curser\\\\copy-of-git-10-082025\\\\cyber-cursor\\\\frontend\\\\src\\\\contexts\\\\AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect, useCallback } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport toast from 'react-hot-toast';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(undefined);\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const navigate = useNavigate();\n  const API_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000';\n  const fetchUserProfile = useCallback(async () => {\n    try {\n      const token = localStorage.getItem('access_token');\n      if (!token) {\n        setLoading(false);\n        return;\n      }\n      const response = await fetch(`${API_URL}/api/v1/auth/me`, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      if (response.ok) {\n        const userData = await response.json();\n        setUser(userData);\n      } else if (response.status === 401 || response.status === 403) {\n        // Token is invalid or expired, clear it\n        console.log('Token invalid or expired, clearing...');\n        localStorage.removeItem('access_token');\n        setUser(null);\n      } else if (response.status === 500) {\n        // Server error, clear token to prevent further issues\n        console.warn('Server error when fetching user profile, clearing token');\n        localStorage.removeItem('access_token');\n        setUser(null);\n      } else {\n        // Other errors, clear token to be safe\n        console.warn('Unexpected error when fetching user profile, clearing token');\n        localStorage.removeItem('access_token');\n        setUser(null);\n      }\n    } catch (error) {\n      console.error('Error fetching user profile:', error);\n      // Network errors or other issues - clear token to prevent further issues\n      localStorage.removeItem('access_token');\n      setUser(null);\n    } finally {\n      setLoading(false);\n    }\n  }, [API_URL]);\n\n  // Check if user is already authenticated on app load\n  useEffect(() => {\n    const token = localStorage.getItem('access_token');\n    if (token) {\n      console.log('AuthContext - token found, fetching user profile');\n      fetchUserProfile();\n    } else {\n      console.log('AuthContext - no token found, user not authenticated');\n      setUser(null);\n      setLoading(false);\n    }\n  }, [fetchUserProfile]);\n  const login = async (email, password) => {\n    try {\n      setLoading(true);\n\n      // Use OAuth login endpoint which has demo users configured\n      const formData = new URLSearchParams();\n      formData.append('username', email);\n      formData.append('password', password);\n      const response = await fetch(`${API_URL}/api/v1/auth/login/oauth`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded'\n        },\n        body: formData\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.detail || 'Login failed');\n      }\n      const data = await response.json();\n\n      // Store token\n      localStorage.setItem('access_token', data.access_token);\n\n      // Set user data\n      setUser({\n        id: data.user_id,\n        email: data.email,\n        username: data.email.split('@')[0],\n        // Fallback username\n        role: data.role,\n        is_active: true,\n        created_at: new Date().toISOString()\n      });\n      toast.success('Login successful!');\n      navigate('/dashboard');\n    } catch (error) {\n      console.error('Login error:', error);\n      toast.error(error instanceof Error ? error.message : 'Login failed');\n      throw error;\n    } finally {\n      setLoading(false);\n    }\n  };\n  const register = async userData => {\n    try {\n      setLoading(true);\n      const response = await fetch(`${API_URL}/api/v1/auth/register`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(userData)\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.detail || 'Registration failed');\n      }\n\n      // Registration successful\n      toast.success('Registration successful! Please log in.');\n      navigate('/login');\n    } catch (error) {\n      console.error('Registration error:', error);\n      toast.error(error instanceof Error ? error.message : 'Registration failed');\n      throw error;\n    } finally {\n      setLoading(false);\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('access_token');\n    setUser(null);\n    toast.success('Logged out successfully');\n    navigate('/login');\n  };\n  const updateProfile = async data => {\n    try {\n      const token = localStorage.getItem('access_token');\n      if (!token) {\n        throw new Error('No authentication token');\n      }\n      const response = await fetch(`${API_URL}/api/v1/users/me`, {\n        method: 'PUT',\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.detail || 'Profile update failed');\n      }\n      const updatedUser = await response.json();\n      setUser(updatedUser);\n      toast.success('Profile updated successfully!');\n    } catch (error) {\n      console.error('Profile update error:', error);\n      toast.error(error instanceof Error ? error.message : 'Profile update failed');\n      throw error;\n    }\n  };\n  const value = {\n    user,\n    isAuthenticated: !!user,\n    loading,\n    login,\n    logout,\n    register,\n    updateProfile\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 237,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"muCGN0kc8EJCjSVJxLlSGZcH4Ng=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","useCallback","useNavigate","toast","jsxDEV","_jsxDEV","AuthContext","undefined","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","loading","setLoading","navigate","API_URL","process","env","REACT_APP_API_URL","fetchUserProfile","token","localStorage","getItem","response","fetch","headers","ok","userData","json","status","console","log","removeItem","warn","error","login","email","password","formData","URLSearchParams","append","method","body","errorData","detail","data","setItem","access_token","id","user_id","username","split","role","is_active","created_at","Date","toISOString","success","message","register","JSON","stringify","logout","updateProfile","updatedUser","value","isAuthenticated","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/curser/copy-of-git-10-082025/cyber-cursor/frontend/src/contexts/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect, ReactNode, useCallback } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport toast from 'react-hot-toast';\r\n\r\ninterface User {\r\n  id: number;\r\n  email: string;\r\n  username: string;\r\n  full_name?: string;\r\n  role: string;\r\n  is_active: boolean;\r\n  created_at: string;\r\n}\r\n\r\ninterface AuthContextType {\r\n  user: User | null;\r\n  isAuthenticated: boolean;\r\n  loading: boolean;\r\n  login: (email: string, password: string) => Promise<void>;\r\n  logout: () => void;\r\n  register: (userData: RegisterData) => Promise<void>;\r\n  updateProfile: (data: Partial<User>) => Promise<void>;\r\n}\r\n\r\ninterface RegisterData {\r\n  email: string;\r\n  username: string;\r\n  password: string;\r\n  confirm_password: string;\r\n  full_name?: string;\r\n}\r\n\r\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (context === undefined) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\ninterface AuthProviderProps {\r\n  children: ReactNode;\r\n}\r\n\r\nexport const AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {\r\n  const [user, setUser] = useState<User | null>(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const navigate = useNavigate();\r\n\r\n  const API_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000';\r\n\r\n  const fetchUserProfile = useCallback(async () => {\r\n    try {\r\n      const token = localStorage.getItem('access_token');\r\n      if (!token) {\r\n        setLoading(false);\r\n        return;\r\n      }\r\n\r\n      const response = await fetch(`${API_URL}/api/v1/auth/me`, {\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`,\r\n          'Content-Type': 'application/json',\r\n        },\r\n      });\r\n\r\n      if (response.ok) {\r\n        const userData = await response.json();\r\n        setUser(userData);\r\n      } else if (response.status === 401 || response.status === 403) {\r\n        // Token is invalid or expired, clear it\r\n        console.log('Token invalid or expired, clearing...');\r\n        localStorage.removeItem('access_token');\r\n        setUser(null);\r\n      } else if (response.status === 500) {\r\n        // Server error, clear token to prevent further issues\r\n        console.warn('Server error when fetching user profile, clearing token');\r\n        localStorage.removeItem('access_token');\r\n        setUser(null);\r\n      } else {\r\n        // Other errors, clear token to be safe\r\n        console.warn('Unexpected error when fetching user profile, clearing token');\r\n        localStorage.removeItem('access_token');\r\n        setUser(null);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching user profile:', error);\r\n      // Network errors or other issues - clear token to prevent further issues\r\n      localStorage.removeItem('access_token');\r\n      setUser(null);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [API_URL]);\r\n\r\n  // Check if user is already authenticated on app load\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('access_token');\r\n    if (token) {\r\n      console.log('AuthContext - token found, fetching user profile');\r\n      fetchUserProfile();\r\n    } else {\r\n      console.log('AuthContext - no token found, user not authenticated');\r\n      setUser(null);\r\n      setLoading(false);\r\n    }\r\n  }, [fetchUserProfile]);\r\n\r\n  const login = async (email: string, password: string) => {\r\n    try {\r\n      setLoading(true);\r\n      \r\n      // Use OAuth login endpoint which has demo users configured\r\n      const formData = new URLSearchParams();\r\n      formData.append('username', email);\r\n      formData.append('password', password);\r\n\r\n      const response = await fetch(`${API_URL}/api/v1/auth/login/oauth`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/x-www-form-urlencoded',\r\n        },\r\n        body: formData,\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        throw new Error(errorData.detail || 'Login failed');\r\n      }\r\n\r\n      const data = await response.json();\r\n      \r\n      // Store token\r\n      localStorage.setItem('access_token', data.access_token);\r\n      \r\n      // Set user data\r\n      setUser({\r\n        id: data.user_id,\r\n        email: data.email,\r\n        username: data.email.split('@')[0], // Fallback username\r\n        role: data.role,\r\n        is_active: true,\r\n        created_at: new Date().toISOString(),\r\n      });\r\n\r\n      toast.success('Login successful!');\r\n      navigate('/dashboard');\r\n    } catch (error) {\r\n      console.error('Login error:', error);\r\n      toast.error(error instanceof Error ? error.message : 'Login failed');\r\n      throw error;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const register = async (userData: RegisterData) => {\r\n    try {\r\n      setLoading(true);\r\n\r\n      const response = await fetch(`${API_URL}/api/v1/auth/register`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(userData),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        throw new Error(errorData.detail || 'Registration failed');\r\n      }\r\n\r\n      // Registration successful\r\n      toast.success('Registration successful! Please log in.');\r\n      navigate('/login');\r\n    } catch (error) {\r\n      console.error('Registration error:', error);\r\n      toast.error(error instanceof Error ? error.message : 'Registration failed');\r\n      throw error;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem('access_token');\r\n    setUser(null);\r\n    toast.success('Logged out successfully');\r\n    navigate('/login');\r\n  };\r\n\r\n  const updateProfile = async (data: Partial<User>) => {\r\n    try {\r\n      const token = localStorage.getItem('access_token');\r\n      if (!token) {\r\n        throw new Error('No authentication token');\r\n      }\r\n\r\n      const response = await fetch(`${API_URL}/api/v1/users/me`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`,\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(data),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        throw new Error(errorData.detail || 'Profile update failed');\r\n      }\r\n\r\n      const updatedUser = await response.json();\r\n      setUser(updatedUser);\r\n      toast.success('Profile updated successfully!');\r\n    } catch (error) {\r\n      console.error('Profile update error:', error);\r\n      toast.error(error instanceof Error ? error.message : 'Profile update failed');\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const value: AuthContextType = {\r\n    user,\r\n    isAuthenticated: !!user,\r\n    loading,\r\n    login,\r\n    logout,\r\n    register,\r\n    updateProfile,\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}