{"ast":null,"code":"import React,{createContext,useContext,useState,useEffect,useCallback}from'react';import{useNavigate}from'react-router-dom';import toast from'react-hot-toast';import{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext(undefined);export const useAuth=()=>{const context=useContext(AuthContext);if(context===undefined){throw new Error('useAuth must be used within an AuthProvider');}return context;};export const AuthProvider=_ref=>{let{children}=_ref;const[user,setUser]=useState(null);const[loading,setLoading]=useState(true);const navigate=useNavigate();const API_URL=process.env.REACT_APP_API_URL||'http://localhost:8000';const fetchUserProfile=useCallback(async()=>{try{const token=localStorage.getItem('access_token');if(!token){setLoading(false);return;}const response=await fetch(\"\".concat(API_URL,\"/api/v1/auth/me\"),{headers:{'Authorization':\"Bearer \".concat(token),'Content-Type':'application/json'}});if(response.ok){const userData=await response.json();setUser(userData);}else if(response.status===401||response.status===403){// Token is invalid or expired, clear it\nconsole.log('Token invalid or expired, clearing...');localStorage.removeItem('access_token');setUser(null);}else if(response.status===500){// Server error, clear token to prevent further issues\nconsole.warn('Server error when fetching user profile, clearing token');localStorage.removeItem('access_token');setUser(null);}else{// Other errors, clear token to be safe\nconsole.warn('Unexpected error when fetching user profile, clearing token');localStorage.removeItem('access_token');setUser(null);}}catch(error){console.error('Error fetching user profile:',error);// Network errors or other issues - clear token to prevent further issues\nlocalStorage.removeItem('access_token');setUser(null);}finally{setLoading(false);}},[API_URL]);// Check if user is already authenticated on app load\nuseEffect(()=>{const token=localStorage.getItem('access_token');if(token){console.log('AuthContext - token found, fetching user profile');fetchUserProfile();}else{console.log('AuthContext - no token found, user not authenticated');setUser(null);setLoading(false);}},[fetchUserProfile]);const login=async(email,password)=>{try{setLoading(true);const response=await fetch(\"\".concat(API_URL,\"/api/v1/auth/login\"),{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({email,password})});if(!response.ok){const errorData=await response.json();throw new Error(errorData.detail||'Login failed');}const data=await response.json();// Store token\nlocalStorage.setItem('access_token',data.access_token);// Set user data\nsetUser({id:data.user_id,email:data.email,username:data.username||data.email.split('@')[0],// Use username from response if available\nrole:data.role,is_active:true,created_at:new Date().toISOString()});toast.success('Login successful!');navigate('/dashboard');}catch(error){console.error('Login error:',error);toast.error(error instanceof Error?error.message:'Login failed');throw error;}finally{setLoading(false);}};const register=async userData=>{try{setLoading(true);const response=await fetch(\"\".concat(API_URL,\"/api/v1/auth/register\"),{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(userData)});if(!response.ok){const errorData=await response.json();throw new Error(errorData.detail||'Registration failed');}// Registration successful\ntoast.success('Registration successful! Please log in.');navigate('/login');}catch(error){console.error('Registration error:',error);toast.error(error instanceof Error?error.message:'Registration failed');throw error;}finally{setLoading(false);}};const logout=()=>{localStorage.removeItem('access_token');setUser(null);toast.success('Logged out successfully');navigate('/login');};const updateProfile=async data=>{try{const token=localStorage.getItem('access_token');if(!token){throw new Error('No authentication token');}const response=await fetch(\"\".concat(API_URL,\"/api/v1/users/me\"),{method:'PUT',headers:{'Authorization':\"Bearer \".concat(token),'Content-Type':'application/json'},body:JSON.stringify(data)});if(!response.ok){const errorData=await response.json();throw new Error(errorData.detail||'Profile update failed');}const updatedUser=await response.json();setUser(updatedUser);toast.success('Profile updated successfully!');}catch(error){console.error('Profile update error:',error);toast.error(error instanceof Error?error.message:'Profile update failed');throw error;}};const value={user,isAuthenticated:!!user,loading,login,logout,register,updateProfile,getAuthToken:()=>localStorage.getItem('access_token')};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:value,children:children});};","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","useCallback","useNavigate","toast","jsx","_jsx","AuthContext","undefined","useAuth","context","Error","AuthProvider","_ref","children","user","setUser","loading","setLoading","navigate","API_URL","process","env","REACT_APP_API_URL","fetchUserProfile","token","localStorage","getItem","response","fetch","concat","headers","ok","userData","json","status","console","log","removeItem","warn","error","login","email","password","method","body","JSON","stringify","errorData","detail","data","setItem","access_token","id","user_id","username","split","role","is_active","created_at","Date","toISOString","success","message","register","logout","updateProfile","updatedUser","value","isAuthenticated","getAuthToken","Provider"],"sources":["D:/curser/copy-of-git-10-082025/cyber-cursor/frontend/src/contexts/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect, ReactNode, useCallback } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport toast from 'react-hot-toast';\r\n\r\ninterface User {\r\n  id: number;\r\n  email: string;\r\n  username: string;\r\n  full_name?: string;\r\n  role: string;\r\n  is_active: boolean;\r\n  created_at: string;\r\n}\r\n\r\ninterface AuthContextType {\r\n  user: User | null;\r\n  isAuthenticated: boolean;\r\n  loading: boolean;\r\n  login: (email: string, password: string) => Promise<void>;\r\n  logout: () => void;\r\n  register: (userData: RegisterData) => Promise<void>;\r\n  updateProfile: (data: Partial<User>) => Promise<void>;\r\n  getAuthToken: () => string | null;\r\n}\r\n\r\ninterface RegisterData {\r\n  email: string;\r\n  username: string;\r\n  password: string;\r\n  confirm_password: string;\r\n  full_name?: string;\r\n}\r\n\r\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (context === undefined) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\ninterface AuthProviderProps {\r\n  children: ReactNode;\r\n}\r\n\r\nexport const AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {\r\n  const [user, setUser] = useState<User | null>(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const navigate = useNavigate();\r\n\r\n  const API_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000';\r\n\r\n  const fetchUserProfile = useCallback(async () => {\r\n    try {\r\n      const token = localStorage.getItem('access_token');\r\n      if (!token) {\r\n        setLoading(false);\r\n        return;\r\n      }\r\n\r\n      const response = await fetch(`${API_URL}/api/v1/auth/me`, {\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`,\r\n          'Content-Type': 'application/json',\r\n        },\r\n      });\r\n\r\n      if (response.ok) {\r\n        const userData = await response.json();\r\n        setUser(userData);\r\n      } else if (response.status === 401 || response.status === 403) {\r\n        // Token is invalid or expired, clear it\r\n        console.log('Token invalid or expired, clearing...');\r\n        localStorage.removeItem('access_token');\r\n        setUser(null);\r\n      } else if (response.status === 500) {\r\n        // Server error, clear token to prevent further issues\r\n        console.warn('Server error when fetching user profile, clearing token');\r\n        localStorage.removeItem('access_token');\r\n        setUser(null);\r\n      } else {\r\n        // Other errors, clear token to be safe\r\n        console.warn('Unexpected error when fetching user profile, clearing token');\r\n        localStorage.removeItem('access_token');\r\n        setUser(null);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching user profile:', error);\r\n      // Network errors or other issues - clear token to prevent further issues\r\n      localStorage.removeItem('access_token');\r\n      setUser(null);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [API_URL]);\r\n\r\n  // Check if user is already authenticated on app load\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('access_token');\r\n    if (token) {\r\n      console.log('AuthContext - token found, fetching user profile');\r\n      fetchUserProfile();\r\n    } else {\r\n      console.log('AuthContext - no token found, user not authenticated');\r\n      setUser(null);\r\n      setLoading(false);\r\n    }\r\n  }, [fetchUserProfile]);\r\n\r\n  const login = async (email: string, password: string) => {\r\n    try {\r\n      setLoading(true);\r\n      \r\n      const response = await fetch(`${API_URL}/api/v1/auth/login`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ email, password }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        throw new Error(errorData.detail || 'Login failed');\r\n      }\r\n\r\n      const data = await response.json();\r\n      \r\n      // Store token\r\n      localStorage.setItem('access_token', data.access_token);\r\n      \r\n      // Set user data\r\n      setUser({\r\n        id: data.user_id,\r\n        email: data.email,\r\n        username: data.username || data.email.split('@')[0], // Use username from response if available\r\n        role: data.role,\r\n        is_active: true,\r\n        created_at: new Date().toISOString(),\r\n      });\r\n\r\n      toast.success('Login successful!');\r\n      navigate('/dashboard');\r\n    } catch (error) {\r\n      console.error('Login error:', error);\r\n      toast.error(error instanceof Error ? error.message : 'Login failed');\r\n      throw error;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const register = async (userData: RegisterData) => {\r\n    try {\r\n      setLoading(true);\r\n\r\n      const response = await fetch(`${API_URL}/api/v1/auth/register`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(userData),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        throw new Error(errorData.detail || 'Registration failed');\r\n      }\r\n\r\n      // Registration successful\r\n      toast.success('Registration successful! Please log in.');\r\n      navigate('/login');\r\n    } catch (error) {\r\n      console.error('Registration error:', error);\r\n      toast.error(error instanceof Error ? error.message : 'Registration failed');\r\n      throw error;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem('access_token');\r\n    setUser(null);\r\n    toast.success('Logged out successfully');\r\n    navigate('/login');\r\n  };\r\n\r\n  const updateProfile = async (data: Partial<User>) => {\r\n    try {\r\n      const token = localStorage.getItem('access_token');\r\n      if (!token) {\r\n        throw new Error('No authentication token');\r\n      }\r\n\r\n      const response = await fetch(`${API_URL}/api/v1/users/me`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`,\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(data),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        throw new Error(errorData.detail || 'Profile update failed');\r\n      }\r\n\r\n      const updatedUser = await response.json();\r\n      setUser(updatedUser);\r\n      toast.success('Profile updated successfully!');\r\n    } catch (error) {\r\n      console.error('Profile update error:', error);\r\n      toast.error(error instanceof Error ? error.message : 'Profile update failed');\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const value: AuthContextType = {\r\n    user,\r\n    isAuthenticated: !!user,\r\n    loading,\r\n    login,\r\n    logout,\r\n    register,\r\n    updateProfile,\r\n    getAuthToken: () => localStorage.getItem('access_token'),\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}