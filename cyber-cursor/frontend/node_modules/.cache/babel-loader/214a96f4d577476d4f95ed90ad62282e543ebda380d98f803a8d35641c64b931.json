{"ast":null,"code":"import _objectSpread from\"D:/curser/copy-of-git-10-082025/cyber-cursor/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{createContext,useContext,useState,useEffect}from'react';import{useNavigate}from'react-router-dom';import{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext(undefined);export const useAuth=()=>{const context=useContext(AuthContext);if(context===undefined){throw new Error('useAuth must be used within an AuthProvider');}return context;};export const AuthProvider=_ref=>{let{children}=_ref;const[user,setUser]=useState(null);const[loading,setLoading]=useState(false);const[error,setError]=useState(null);const navigate=useNavigate();// Demo mode - no backend required\nconst login=async(email,password)=>{try{setLoading(true);setError(null);// Simulate API delay\nawait new Promise(resolve=>setTimeout(resolve,1000));// Demo user data based on email\nlet demoUser;if(email==='admin@cybershield.com'){demoUser={id:1,email:'admin@cybershield.com',username:'admin',full_name:'Administrator',role:'admin',is_active:true,created_at:new Date().toISOString()};}else if(email==='analyst@cybershield.com'){demoUser={id:2,email:'analyst@cybershield.com',username:'analyst',full_name:'Security Analyst',role:'analyst',is_active:true,created_at:new Date().toISOString()};}else if(email==='user@cybershield.com'){demoUser={id:3,email:'user@cybershield.com',username:'user',full_name:'Regular User',role:'user',is_active:true,created_at:new Date().toISOString()};}else{// Any other email with password 'password' will work\ndemoUser={id:4,email:email,username:email.split('@')[0],full_name:'Demo User',role:'user',is_active:true,created_at:new Date().toISOString()};}// Store user in localStorage for demo\nlocalStorage.setItem('demo_user',JSON.stringify(demoUser));localStorage.setItem('demo_authenticated','true');setUser(demoUser);navigate('/dashboard');}catch(error){console.error('Login failed:',error);setError('Login failed. Please try again.');}finally{setLoading(false);}};const logout=()=>{localStorage.removeItem('demo_user');localStorage.removeItem('demo_authenticated');setUser(null);navigate('/login');};const register=async userData=>{try{setLoading(true);setError(null);// Simulate API delay\nawait new Promise(resolve=>setTimeout(resolve,1000));// Demo registration - just log in the user\nawait login(userData.email,userData.password);}catch(error){console.error('Registration failed:',error);setError('Registration failed. Please try again.');}finally{setLoading(false);}};const updateProfile=async data=>{try{setLoading(true);setError(null);// Simulate API delay\nawait new Promise(resolve=>setTimeout(resolve,1000));if(user){const updatedUser=_objectSpread(_objectSpread({},user),data);setUser(updatedUser);localStorage.setItem('demo_user',JSON.stringify(updatedUser));}}catch(error){console.error('Profile update failed:',error);setError('Profile update failed. Please try again.');}finally{setLoading(false);}};// Check if user is already authenticated on app load\nuseEffect(()=>{const demoUser=localStorage.getItem('demo_user');const isDemoAuthenticated=localStorage.getItem('demo_authenticated');if(demoUser&&isDemoAuthenticated==='true'){try{const userData=JSON.parse(demoUser);setUser(userData);}catch(error){console.error('Error parsing demo user data:',error);localStorage.removeItem('demo_user');localStorage.removeItem('demo_authenticated');}}setLoading(false);},[]);const value={user,isAuthenticated:!!user,loading,login,logout,register,updateProfile};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:value,children:children});};","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","useNavigate","jsx","_jsx","AuthContext","undefined","useAuth","context","Error","AuthProvider","_ref","children","user","setUser","loading","setLoading","error","setError","navigate","login","email","password","Promise","resolve","setTimeout","demoUser","id","username","full_name","role","is_active","created_at","Date","toISOString","split","localStorage","setItem","JSON","stringify","console","logout","removeItem","register","userData","updateProfile","data","updatedUser","_objectSpread","getItem","isDemoAuthenticated","parse","value","isAuthenticated","Provider"],"sources":["D:/curser/copy-of-git-10-082025/cyber-cursor/frontend/src/contexts/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect, ReactNode, useCallback } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\ninterface User {\r\n  id: number;\r\n  email: string;\r\n  username: string;\r\n  full_name?: string;\r\n  role: string;\r\n  is_active: boolean;\r\n  created_at: string;\r\n}\r\n\r\ninterface AuthContextType {\r\n  user: User | null;\r\n  isAuthenticated: boolean;\r\n  loading: boolean;\r\n  login: (email: string, password: string) => Promise<void>;\r\n  logout: () => void;\r\n  register: (userData: RegisterData) => Promise<void>;\r\n  updateProfile: (data: Partial<User>) => Promise<void>;\r\n}\r\n\r\ninterface RegisterData {\r\n  email: string;\r\n  username: string;\r\n  password: string;\r\n  confirm_password: string;\r\n  full_name?: string;\r\n}\r\n\r\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (context === undefined) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\ninterface AuthProviderProps {\r\n  children: ReactNode;\r\n}\r\n\r\nexport const AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {\r\n  const [user, setUser] = useState<User | null>(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const navigate = useNavigate();\r\n\r\n  // Demo mode - no backend required\r\n  const login = async (email: string, password: string) => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      \r\n      // Simulate API delay\r\n      await new Promise(resolve => setTimeout(resolve, 1000));\r\n      \r\n      // Demo user data based on email\r\n      let demoUser: User;\r\n      \r\n      if (email === 'admin@cybershield.com') {\r\n        demoUser = {\r\n          id: 1,\r\n          email: 'admin@cybershield.com',\r\n          username: 'admin',\r\n          full_name: 'Administrator',\r\n          role: 'admin',\r\n          is_active: true,\r\n          created_at: new Date().toISOString()\r\n        };\r\n      } else if (email === 'analyst@cybershield.com') {\r\n        demoUser = {\r\n          id: 2,\r\n          email: 'analyst@cybershield.com',\r\n          username: 'analyst',\r\n          full_name: 'Security Analyst',\r\n          role: 'analyst',\r\n          is_active: true,\r\n          created_at: new Date().toISOString()\r\n        };\r\n      } else if (email === 'user@cybershield.com') {\r\n        demoUser = {\r\n          id: 3,\r\n          email: 'user@cybershield.com',\r\n          username: 'user',\r\n          full_name: 'Regular User',\r\n          role: 'user',\r\n          is_active: true,\r\n          created_at: new Date().toISOString()\r\n        };\r\n      } else {\r\n        // Any other email with password 'password' will work\r\n        demoUser = {\r\n          id: 4,\r\n          email: email,\r\n          username: email.split('@')[0],\r\n          full_name: 'Demo User',\r\n          role: 'user',\r\n          is_active: true,\r\n          created_at: new Date().toISOString()\r\n        };\r\n      }\r\n      \r\n      // Store user in localStorage for demo\r\n      localStorage.setItem('demo_user', JSON.stringify(demoUser));\r\n      localStorage.setItem('demo_authenticated', 'true');\r\n      \r\n      setUser(demoUser);\r\n      navigate('/dashboard');\r\n      \r\n    } catch (error) {\r\n      console.error('Login failed:', error);\r\n      setError('Login failed. Please try again.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem('demo_user');\r\n    localStorage.removeItem('demo_authenticated');\r\n    setUser(null);\r\n    navigate('/login');\r\n  };\r\n\r\n  const register = async (userData: RegisterData) => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      \r\n      // Simulate API delay\r\n      await new Promise(resolve => setTimeout(resolve, 1000));\r\n      \r\n      // Demo registration - just log in the user\r\n      await login(userData.email, userData.password);\r\n      \r\n    } catch (error) {\r\n      console.error('Registration failed:', error);\r\n      setError('Registration failed. Please try again.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const updateProfile = async (data: Partial<User>) => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      \r\n      // Simulate API delay\r\n      await new Promise(resolve => setTimeout(resolve, 1000));\r\n      \r\n      if (user) {\r\n        const updatedUser = { ...user, ...data };\r\n        setUser(updatedUser);\r\n        localStorage.setItem('demo_user', JSON.stringify(updatedUser));\r\n      }\r\n      \r\n    } catch (error) {\r\n      console.error('Profile update failed:', error);\r\n      setError('Profile update failed. Please try again.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Check if user is already authenticated on app load\r\n  useEffect(() => {\r\n    const demoUser = localStorage.getItem('demo_user');\r\n    const isDemoAuthenticated = localStorage.getItem('demo_authenticated');\r\n    \r\n    if (demoUser && isDemoAuthenticated === 'true') {\r\n      try {\r\n        const userData = JSON.parse(demoUser);\r\n        setUser(userData);\r\n      } catch (error) {\r\n        console.error('Error parsing demo user data:', error);\r\n        localStorage.removeItem('demo_user');\r\n        localStorage.removeItem('demo_authenticated');\r\n      }\r\n    }\r\n    \r\n    setLoading(false);\r\n  }, []);\r\n\r\n  const value: AuthContextType = {\r\n    user,\r\n    isAuthenticated: !!user,\r\n    loading,\r\n    login,\r\n    logout,\r\n    register,\r\n    updateProfile,\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}