{"ast":null,"code":"import _objectSpread from\"D:/curser/copy-of-git-10-082025/cyber-cursor/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect}from'react';import{Box,Container,Typography,Button,Card,CardContent,Grid,Chip,IconButton,Dialog,DialogTitle,DialogContent,DialogActions,TextField,FormControl,InputLabel,Select,MenuItem,FormControlLabel,Switch,Alert,Snackbar,LinearProgress,Table,TableBody,TableCell,TableContainer,TableHead,TableRow,Paper,Pagination}from'@mui/material';import{Add as AddIcon,Edit as EditIcon,Delete as DeleteIcon,Assessment as AssessmentIcon,Download as DownloadIcon,Refresh as RefreshIcon}from'@mui/icons-material';import{qualityGoalsService,QualityGoalStatus,QualityGoalType,QualityGoalPriority}from'../services/qualityGoalsService';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const QualityGoals=()=>{const[state,setState]=useState({goals:[],loading:false,error:null,dialogOpen:false,editMode:false,currentGoal:null,formData:{name:'',description:'',type:QualityGoalType.SECURITY,priority:QualityGoalPriority.MEDIUM,target_value:0,current_value:0,unit:'',status:QualityGoalStatus.ACTIVE},filters:{},pagination:{page:1,limit:20,total:0},metrics:null,showMetrics:false});useEffect(()=>{loadGoals();loadMetrics();},[state.pagination.page,state.filters]);const loadGoals=async()=>{setState(prev=>_objectSpread(_objectSpread({},prev),{},{loading:true,error:null}));try{const response=await qualityGoalsService.getQualityGoals(state.pagination.page,state.pagination.limit,state.filters);setState(prev=>_objectSpread(_objectSpread({},prev),{},{goals:response.goals,pagination:_objectSpread(_objectSpread({},prev.pagination),{},{total:response.total}),loading:false}));}catch(error){setState(prev=>_objectSpread(_objectSpread({},prev),{},{error:'Failed to load quality goals',loading:false}));}};const loadMetrics=async()=>{try{const metrics=await qualityGoalsService.getQualityGoalMetrics();setState(prev=>_objectSpread(_objectSpread({},prev),{},{metrics}));}catch(error){console.error('Failed to load metrics:',error);}};const handleOpenDialog=goal=>{if(goal){setState(prev=>_objectSpread(_objectSpread({},prev),{},{editMode:true,currentGoal:goal,formData:_objectSpread({},goal),dialogOpen:true}));}else{setState(prev=>_objectSpread(_objectSpread({},prev),{},{editMode:false,currentGoal:null,formData:{name:'',description:'',type:QualityGoalType.SECURITY,priority:QualityGoalPriority.MEDIUM,target_value:0,current_value:0,unit:'',status:QualityGoalStatus.ACTIVE},dialogOpen:true}));}};const handleCloseDialog=()=>{setState(prev=>_objectSpread(_objectSpread({},prev),{},{dialogOpen:false}));};const handleSubmit=async()=>{try{if(state.editMode&&state.currentGoal){await qualityGoalsService.updateQualityGoal(state.currentGoal.id,state.formData);}else{await qualityGoalsService.createQualityGoal(state.formData);}handleCloseDialog();loadGoals();loadMetrics();}catch(error){setState(prev=>_objectSpread(_objectSpread({},prev),{},{error:'Failed to save quality goal'}));}};const handleDelete=async goalId=>{if(window.confirm('Are you sure you want to delete this quality goal?')){try{await qualityGoalsService.deleteQualityGoal(goalId);loadGoals();loadMetrics();}catch(error){setState(prev=>_objectSpread(_objectSpread({},prev),{},{error:'Failed to delete quality goal'}));}}};const handleProgressUpdate=async(goalId,currentValue)=>{try{await qualityGoalsService.updateGoalProgress(goalId,currentValue);loadGoals();loadMetrics();}catch(error){setState(prev=>_objectSpread(_objectSpread({},prev),{},{error:'Failed to update progress'}));}};const getPriorityColor=priority=>{switch(priority){case QualityGoalPriority.CRITICAL:return'error';case QualityGoalPriority.HIGH:return'warning';case QualityGoalPriority.MEDIUM:return'info';case QualityGoalPriority.LOW:return'success';default:return'default';}};const getStatusColor=status=>{switch(status){case QualityGoalStatus.ACTIVE:return'success';case QualityGoalStatus.INACTIVE:return'warning';case QualityGoalStatus.ARCHIVED:return'default';default:return'default';}};const getProgressColor=progress=>{if(progress>=80)return'success';if(progress>=60)return'info';if(progress>=40)return'warning';return'error';};const calculateProgress=(current,target)=>{if(target===0)return 0;return Math.min(current/target*100,100);};const handleFilterChange=filter=>{setState(prev=>_objectSpread(_objectSpread({},prev),{},{filters:_objectSpread(_objectSpread({},prev.filters),filter),pagination:_objectSpread(_objectSpread({},prev.pagination),{},{page:1})}));};const handlePageChange=(event,page)=>{setState(prev=>_objectSpread(_objectSpread({},prev),{},{pagination:_objectSpread(_objectSpread({},prev.pagination),{},{page})}));};const handleExport=async format=>{try{const blob=await qualityGoalsService.exportQualityGoalsReport(format,state.filters);const url=window.URL.createObjectURL(blob);const a=document.createElement('a');a.href=url;a.download=\"quality-goals-report.\".concat(format);a.click();window.URL.revokeObjectURL(url);}catch(error){setState(prev=>_objectSpread(_objectSpread({},prev),{},{error:'Failed to export report'}));}};if(state.loading&&state.goals.length===0){return/*#__PURE__*/_jsx(Box,{sx:{width:'100%'},children:/*#__PURE__*/_jsx(LinearProgress,{})});}return/*#__PURE__*/_jsxs(Container,{maxWidth:\"xl\",children:[/*#__PURE__*/_jsxs(Box,{sx:{my:4},children:[/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',justifyContent:'space-between',alignItems:'center',mb:3},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h4\",component:\"h1\",gutterBottom:true,children:\"Quality Goals\"}),/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsxs(Button,{variant:\"outlined\",startIcon:/*#__PURE__*/_jsx(AssessmentIcon,{}),onClick:()=>setState(prev=>_objectSpread(_objectSpread({},prev),{},{showMetrics:!prev.showMetrics})),sx:{mr:2},children:[state.showMetrics?'Hide':'Show',\" Metrics\"]}),/*#__PURE__*/_jsx(Button,{variant:\"contained\",startIcon:/*#__PURE__*/_jsx(AddIcon,{}),onClick:()=>handleOpenDialog(),children:\"Add Quality Goal\"})]})]}),state.showMetrics&&state.metrics&&/*#__PURE__*/_jsx(Card,{sx:{mb:3},children:/*#__PURE__*/_jsxs(CardContent,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",gutterBottom:true,children:\"Quality Goals Overview\"}),/*#__PURE__*/_jsxs(Grid,{container:true,spacing:3,children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,md:3,children:/*#__PURE__*/_jsxs(Box,{textAlign:\"center\",children:[/*#__PURE__*/_jsx(Typography,{variant:\"h4\",color:\"primary\",children:state.metrics.total_goals}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"textSecondary\",children:\"Total Goals\"})]})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,md:3,children:/*#__PURE__*/_jsxs(Box,{textAlign:\"center\",children:[/*#__PURE__*/_jsx(Typography,{variant:\"h4\",color:\"success.main\",children:state.metrics.active_goals}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"textSecondary\",children:\"Active Goals\"})]})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,md:3,children:/*#__PURE__*/_jsxs(Box,{textAlign:\"center\",children:[/*#__PURE__*/_jsx(Typography,{variant:\"h4\",color:\"warning.main\",children:state.metrics.overdue_goals}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"textSecondary\",children:\"Overdue Goals\"})]})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,md:3,children:/*#__PURE__*/_jsxs(Box,{textAlign:\"center\",children:[/*#__PURE__*/_jsxs(Typography,{variant:\"h4\",color:\"info.main\",children:[state.metrics.average_progress.toFixed(1),\"%\"]}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"textSecondary\",children:\"Average Progress\"})]})})]})]})}),/*#__PURE__*/_jsx(Card,{sx:{mb:3},children:/*#__PURE__*/_jsxs(CardContent,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",gutterBottom:true,children:\"Filters\"}),/*#__PURE__*/_jsxs(Grid,{container:true,spacing:2,children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,md:3,children:/*#__PURE__*/_jsxs(FormControl,{fullWidth:true,size:\"small\",children:[/*#__PURE__*/_jsx(InputLabel,{children:\"Type\"}),/*#__PURE__*/_jsxs(Select,{value:state.filters.type||'',onChange:e=>handleFilterChange({type:e.target.value}),label:\"Type\",children:[/*#__PURE__*/_jsx(MenuItem,{value:\"\",children:\"All Types\"}),Object.values(QualityGoalType).map(type=>/*#__PURE__*/_jsx(MenuItem,{value:type,children:type},type))]})]})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,md:3,children:/*#__PURE__*/_jsxs(FormControl,{fullWidth:true,size:\"small\",children:[/*#__PURE__*/_jsx(InputLabel,{children:\"Priority\"}),/*#__PURE__*/_jsxs(Select,{value:state.filters.priority||'',onChange:e=>handleFilterChange({priority:e.target.value}),label:\"Priority\",children:[/*#__PURE__*/_jsx(MenuItem,{value:\"\",children:\"All Priorities\"}),Object.values(QualityGoalPriority).map(priority=>/*#__PURE__*/_jsx(MenuItem,{value:priority,children:priority},priority))]})]})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,md:3,children:/*#__PURE__*/_jsxs(FormControl,{fullWidth:true,size:\"small\",children:[/*#__PURE__*/_jsx(InputLabel,{children:\"Status\"}),/*#__PURE__*/_jsxs(Select,{value:state.filters.status||'',onChange:e=>handleFilterChange({status:e.target.value}),label:\"Status\",children:[/*#__PURE__*/_jsx(MenuItem,{value:\"\",children:\"All Statuses\"}),Object.values(QualityGoalStatus).map(status=>/*#__PURE__*/_jsx(MenuItem,{value:status,children:status},status))]})]})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,md:3,children:/*#__PURE__*/_jsx(Button,{variant:\"outlined\",startIcon:/*#__PURE__*/_jsx(RefreshIcon,{}),onClick:loadGoals,fullWidth:true,children:\"Refresh\"})})]})]})}),/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsxs(CardContent,{children:[/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',justifyContent:'space-between',alignItems:'center',mb:2},children:[/*#__PURE__*/_jsxs(Typography,{variant:\"h6\",children:[\"Quality Goals (\",state.pagination.total,\")\"]}),/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(Button,{size:\"small\",startIcon:/*#__PURE__*/_jsx(DownloadIcon,{}),onClick:()=>handleExport('csv'),sx:{mr:1},children:\"CSV\"}),/*#__PURE__*/_jsx(Button,{size:\"small\",startIcon:/*#__PURE__*/_jsx(DownloadIcon,{}),onClick:()=>handleExport('pdf'),sx:{mr:1},children:\"PDF\"}),/*#__PURE__*/_jsx(Button,{size:\"small\",startIcon:/*#__PURE__*/_jsx(DownloadIcon,{}),onClick:()=>handleExport('excel'),children:\"Excel\"})]})]}),/*#__PURE__*/_jsx(TableContainer,{component:Paper,children:/*#__PURE__*/_jsxs(Table,{children:[/*#__PURE__*/_jsx(TableHead,{children:/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:\"Name\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Type\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Priority\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Status\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Progress\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Target\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Current\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Deadline\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Actions\"})]})}),/*#__PURE__*/_jsx(TableBody,{children:state.goals.map(goal=>{const progress=calculateProgress(goal.current_value,goal.target_value);return/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle2\",children:goal.name}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"textSecondary\",children:goal.description})]})}),/*#__PURE__*/_jsx(TableCell,{children:/*#__PURE__*/_jsx(Chip,{label:goal.type,size:\"small\"})}),/*#__PURE__*/_jsx(TableCell,{children:/*#__PURE__*/_jsx(Chip,{label:goal.priority,color:getPriorityColor(goal.priority),size:\"small\"})}),/*#__PURE__*/_jsx(TableCell,{children:/*#__PURE__*/_jsx(Chip,{label:goal.status,color:getStatusColor(goal.status),size:\"small\"})}),/*#__PURE__*/_jsx(TableCell,{children:/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',alignItems:'center'},children:[/*#__PURE__*/_jsx(Box,{sx:{width:'100%',mr:1},children:/*#__PURE__*/_jsx(LinearProgress,{variant:\"determinate\",value:progress,color:getProgressColor(progress),sx:{height:8,borderRadius:4}})}),/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",color:\"textSecondary\",children:[progress.toFixed(1),\"%\"]})]})}),/*#__PURE__*/_jsx(TableCell,{children:/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",children:[goal.target_value,\" \",goal.unit]})}),/*#__PURE__*/_jsx(TableCell,{children:/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",children:[goal.current_value,\" \",goal.unit]})}),/*#__PURE__*/_jsx(TableCell,{children:goal.deadline?/*#__PURE__*/_jsx(Typography,{variant:\"body2\",children:new Date(goal.deadline).toLocaleDateString()}):/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"textSecondary\",children:\"No deadline\"})}),/*#__PURE__*/_jsx(TableCell,{children:/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(IconButton,{size:\"small\",onClick:()=>handleOpenDialog(goal),color:\"primary\",children:/*#__PURE__*/_jsx(EditIcon,{})}),/*#__PURE__*/_jsx(IconButton,{size:\"small\",onClick:()=>handleDelete(goal.id),color:\"error\",children:/*#__PURE__*/_jsx(DeleteIcon,{})})]})})]},goal.id);})})]})}),/*#__PURE__*/_jsx(Box,{sx:{display:'flex',justifyContent:'center',mt:3},children:/*#__PURE__*/_jsx(Pagination,{count:Math.ceil(state.pagination.total/state.pagination.limit),page:state.pagination.page,onChange:handlePageChange,color:\"primary\"})})]})})]}),/*#__PURE__*/_jsxs(Dialog,{open:state.dialogOpen,onClose:handleCloseDialog,maxWidth:\"md\",fullWidth:true,children:[/*#__PURE__*/_jsx(DialogTitle,{children:state.editMode?'Edit Quality Goal':'Add Quality Goal'}),/*#__PURE__*/_jsx(DialogContent,{children:/*#__PURE__*/_jsxs(Grid,{container:true,spacing:2,sx:{mt:1},children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"Name\",value:state.formData.name||'',onChange:e=>setState(prev=>_objectSpread(_objectSpread({},prev),{},{formData:_objectSpread(_objectSpread({},prev.formData),{},{name:e.target.value})})),required:true})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,children:/*#__PURE__*/_jsxs(FormControl,{fullWidth:true,children:[/*#__PURE__*/_jsx(InputLabel,{children:\"Type\"}),/*#__PURE__*/_jsx(Select,{value:state.formData.type||QualityGoalType.SECURITY,onChange:e=>setState(prev=>_objectSpread(_objectSpread({},prev),{},{formData:_objectSpread(_objectSpread({},prev.formData),{},{type:e.target.value})})),label:\"Type\",children:Object.values(QualityGoalType).map(type=>/*#__PURE__*/_jsx(MenuItem,{value:type,children:type},type))})]})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"Description\",value:state.formData.description||'',onChange:e=>setState(prev=>_objectSpread(_objectSpread({},prev),{},{formData:_objectSpread(_objectSpread({},prev.formData),{},{description:e.target.value})})),multiline:true,rows:3})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,children:/*#__PURE__*/_jsxs(FormControl,{fullWidth:true,children:[/*#__PURE__*/_jsx(InputLabel,{children:\"Priority\"}),/*#__PURE__*/_jsx(Select,{value:state.formData.priority||QualityGoalPriority.MEDIUM,onChange:e=>setState(prev=>_objectSpread(_objectSpread({},prev),{},{formData:_objectSpread(_objectSpread({},prev.formData),{},{priority:e.target.value})})),label:\"Priority\",children:Object.values(QualityGoalPriority).map(priority=>/*#__PURE__*/_jsx(MenuItem,{value:priority,children:priority},priority))})]})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,children:/*#__PURE__*/_jsxs(FormControl,{fullWidth:true,children:[/*#__PURE__*/_jsx(InputLabel,{children:\"Status\"}),/*#__PURE__*/_jsx(Select,{value:state.formData.status||QualityGoalStatus.ACTIVE,onChange:e=>setState(prev=>_objectSpread(_objectSpread({},prev),{},{formData:_objectSpread(_objectSpread({},prev.formData),{},{status:e.target.value})})),label:\"Status\",children:Object.values(QualityGoalStatus).map(status=>/*#__PURE__*/_jsx(MenuItem,{value:status,children:status},status))})]})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:4,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"Target Value\",type:\"number\",value:state.formData.target_value||'',onChange:e=>setState(prev=>_objectSpread(_objectSpread({},prev),{},{formData:_objectSpread(_objectSpread({},prev.formData),{},{target_value:parseFloat(e.target.value)||0})})),required:true})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:4,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"Current Value\",type:\"number\",value:state.formData.current_value||'',onChange:e=>setState(prev=>_objectSpread(_objectSpread({},prev),{},{formData:_objectSpread(_objectSpread({},prev.formData),{},{current_value:parseFloat(e.target.value)||0})})),required:true})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:4,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"Unit\",value:state.formData.unit||'',onChange:e=>setState(prev=>_objectSpread(_objectSpread({},prev),{},{formData:_objectSpread(_objectSpread({},prev.formData),{},{unit:e.target.value})})),required:true})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"Deadline\",type:\"date\",value:state.formData.deadline||'',onChange:e=>setState(prev=>_objectSpread(_objectSpread({},prev),{},{formData:_objectSpread(_objectSpread({},prev.formData),{},{deadline:e.target.value})})),InputLabelProps:{shrink:true}})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,children:/*#__PURE__*/_jsx(FormControlLabel,{control:/*#__PURE__*/_jsx(Switch,{checked:state.formData.status===QualityGoalStatus.ACTIVE,onChange:e=>setState(prev=>_objectSpread(_objectSpread({},prev),{},{formData:_objectSpread(_objectSpread({},prev.formData),{},{status:e.target.checked?QualityGoalStatus.ACTIVE:QualityGoalStatus.INACTIVE})}))}),label:\"Active\"})})]})}),/*#__PURE__*/_jsxs(DialogActions,{children:[/*#__PURE__*/_jsx(Button,{onClick:handleCloseDialog,children:\"Cancel\"}),/*#__PURE__*/_jsx(Button,{onClick:handleSubmit,variant:\"contained\",children:state.editMode?'Update':'Create'})]})]}),/*#__PURE__*/_jsx(Snackbar,{open:!!state.error,autoHideDuration:6000,onClose:()=>setState(prev=>_objectSpread(_objectSpread({},prev),{},{error:null})),children:/*#__PURE__*/_jsx(Alert,{severity:\"error\",onClose:()=>setState(prev=>_objectSpread(_objectSpread({},prev),{},{error:null})),children:state.error})})]});};export default QualityGoals;","map":{"version":3,"names":["React","useState","useEffect","Box","Container","Typography","Button","Card","CardContent","Grid","Chip","IconButton","Dialog","DialogTitle","DialogContent","DialogActions","TextField","FormControl","InputLabel","Select","MenuItem","FormControlLabel","Switch","Alert","Snackbar","LinearProgress","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","Pagination","Add","AddIcon","Edit","EditIcon","Delete","DeleteIcon","Assessment","AssessmentIcon","Download","DownloadIcon","Refresh","RefreshIcon","qualityGoalsService","QualityGoalStatus","QualityGoalType","QualityGoalPriority","jsx","_jsx","jsxs","_jsxs","QualityGoals","state","setState","goals","loading","error","dialogOpen","editMode","currentGoal","formData","name","description","type","SECURITY","priority","MEDIUM","target_value","current_value","unit","status","ACTIVE","filters","pagination","page","limit","total","metrics","showMetrics","loadGoals","loadMetrics","prev","_objectSpread","response","getQualityGoals","getQualityGoalMetrics","console","handleOpenDialog","goal","handleCloseDialog","handleSubmit","updateQualityGoal","id","createQualityGoal","handleDelete","goalId","window","confirm","deleteQualityGoal","handleProgressUpdate","currentValue","updateGoalProgress","getPriorityColor","CRITICAL","HIGH","LOW","getStatusColor","INACTIVE","ARCHIVED","getProgressColor","progress","calculateProgress","current","target","Math","min","handleFilterChange","filter","handlePageChange","event","handleExport","format","blob","exportQualityGoalsReport","url","URL","createObjectURL","a","document","createElement","href","download","concat","click","revokeObjectURL","length","sx","width","children","maxWidth","my","display","justifyContent","alignItems","mb","variant","component","gutterBottom","startIcon","onClick","mr","container","spacing","item","xs","sm","md","textAlign","color","total_goals","active_goals","overdue_goals","average_progress","toFixed","fullWidth","size","value","onChange","e","label","Object","values","map","height","borderRadius","deadline","Date","toLocaleDateString","mt","count","ceil","open","onClose","required","multiline","rows","parseFloat","InputLabelProps","shrink","control","checked","autoHideDuration","severity"],"sources":["D:/curser/copy-of-git-10-082025/cyber-cursor/frontend/src/pages/QualityGoals.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Box,\r\n  Container,\r\n  Typography,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  Grid,\r\n  Chip,\r\n  IconButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  TextField,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  FormControlLabel,\r\n  Switch,\r\n  Alert,\r\n  Snackbar,\r\n  LinearProgress,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Paper,\r\n  Pagination,\r\n  Fab,\r\n  Tooltip,\r\n  Divider,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  ListItemSecondaryAction,\r\n  Badge\r\n} from '@mui/material';\r\nimport {\r\n  Add as AddIcon,\r\n  Edit as EditIcon,\r\n  Delete as DeleteIcon,\r\n  Visibility as ViewIcon,\r\n  TrendingUp as TrendingUpIcon,\r\n  Warning as WarningIcon,\r\n  CheckCircle as CheckCircleIcon,\r\n  Schedule as ScheduleIcon,\r\n  Flag as FlagIcon,\r\n  Assessment as AssessmentIcon,\r\n  Download as DownloadIcon,\r\n  FilterList as FilterIcon,\r\n  Refresh as RefreshIcon,\r\n  Archive as ArchiveIcon,\r\n  Unarchive as UnarchiveIcon\r\n} from '@mui/icons-material';\r\nimport { qualityGoalsService, QualityGoalResponse, QualityGoalCreate, QualityGoalUpdate, QualityGoalStatus, QualityGoalType, QualityGoalPriority, QualityGoalFilter } from '../services/qualityGoalsService';\r\n\r\ninterface QualityGoalsPageState {\r\n  goals: QualityGoalResponse[];\r\n  loading: boolean;\r\n  error: string | null;\r\n  dialogOpen: boolean;\r\n  editMode: boolean;\r\n  currentGoal: QualityGoalResponse | null;\r\n  formData: Partial<QualityGoalCreate>;\r\n  filters: QualityGoalFilter;\r\n  pagination: {\r\n    page: number;\r\n    limit: number;\r\n    total: number;\r\n  };\r\n  metrics: any;\r\n  showMetrics: boolean;\r\n}\r\n\r\nconst QualityGoals: React.FC = () => {\r\n  const [state, setState] = useState<QualityGoalsPageState>({\r\n    goals: [],\r\n    loading: false,\r\n    error: null,\r\n    dialogOpen: false,\r\n    editMode: false,\r\n    currentGoal: null,\r\n    formData: {\r\n      name: '',\r\n      description: '',\r\n      type: QualityGoalType.SECURITY,\r\n      priority: QualityGoalPriority.MEDIUM,\r\n      target_value: 0,\r\n      current_value: 0,\r\n      unit: '',\r\n      status: QualityGoalStatus.ACTIVE\r\n    },\r\n    filters: {},\r\n    pagination: {\r\n      page: 1,\r\n      limit: 20,\r\n      total: 0\r\n    },\r\n    metrics: null,\r\n    showMetrics: false\r\n  });\r\n\r\n  useEffect(() => {\r\n    loadGoals();\r\n    loadMetrics();\r\n  }, [state.pagination.page, state.filters]);\r\n\r\n  const loadGoals = async () => {\r\n    setState(prev => ({ ...prev, loading: true, error: null }));\r\n    try {\r\n      const response = await qualityGoalsService.getQualityGoals(\r\n        state.pagination.page,\r\n        state.pagination.limit,\r\n        state.filters\r\n      );\r\n      setState(prev => ({\r\n        ...prev,\r\n        goals: response.goals,\r\n        pagination: {\r\n          ...prev.pagination,\r\n          total: response.total\r\n        },\r\n        loading: false\r\n      }));\r\n    } catch (error) {\r\n      setState(prev => ({\r\n        ...prev,\r\n        error: 'Failed to load quality goals',\r\n        loading: false\r\n      }));\r\n    }\r\n  };\r\n\r\n  const loadMetrics = async () => {\r\n    try {\r\n      const metrics = await qualityGoalsService.getQualityGoalMetrics();\r\n      setState(prev => ({ ...prev, metrics }));\r\n    } catch (error) {\r\n      console.error('Failed to load metrics:', error);\r\n    }\r\n  };\r\n\r\n  const handleOpenDialog = (goal?: QualityGoalResponse) => {\r\n    if (goal) {\r\n      setState(prev => ({\r\n        ...prev,\r\n        editMode: true,\r\n        currentGoal: goal,\r\n        formData: { ...goal },\r\n        dialogOpen: true\r\n      }));\r\n    } else {\r\n      setState(prev => ({\r\n        ...prev,\r\n        editMode: false,\r\n        currentGoal: null,\r\n        formData: {\r\n          name: '',\r\n          description: '',\r\n          type: QualityGoalType.SECURITY,\r\n          priority: QualityGoalPriority.MEDIUM,\r\n          target_value: 0,\r\n          current_value: 0,\r\n          unit: '',\r\n          status: QualityGoalStatus.ACTIVE\r\n        },\r\n        dialogOpen: true\r\n      }));\r\n    }\r\n  };\r\n\r\n  const handleCloseDialog = () => {\r\n    setState(prev => ({ ...prev, dialogOpen: false }));\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    try {\r\n      if (state.editMode && state.currentGoal) {\r\n        await qualityGoalsService.updateQualityGoal(state.currentGoal.id, state.formData as QualityGoalUpdate);\r\n      } else {\r\n        await qualityGoalsService.createQualityGoal(state.formData as QualityGoalCreate);\r\n      }\r\n      handleCloseDialog();\r\n      loadGoals();\r\n      loadMetrics();\r\n    } catch (error) {\r\n      setState(prev => ({ ...prev, error: 'Failed to save quality goal' }));\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (goalId: string) => {\r\n    if (window.confirm('Are you sure you want to delete this quality goal?')) {\r\n      try {\r\n        await qualityGoalsService.deleteQualityGoal(goalId);\r\n        loadGoals();\r\n        loadMetrics();\r\n      } catch (error) {\r\n        setState(prev => ({ ...prev, error: 'Failed to delete quality goal' }));\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleProgressUpdate = async (goalId: string, currentValue: number) => {\r\n    try {\r\n      await qualityGoalsService.updateGoalProgress(goalId, currentValue);\r\n      loadGoals();\r\n      loadMetrics();\r\n    } catch (error) {\r\n      setState(prev => ({ ...prev, error: 'Failed to update progress' }));\r\n    }\r\n  };\r\n\r\n  const getPriorityColor = (priority: QualityGoalPriority) => {\r\n    switch (priority) {\r\n      case QualityGoalPriority.CRITICAL: return 'error';\r\n      case QualityGoalPriority.HIGH: return 'warning';\r\n      case QualityGoalPriority.MEDIUM: return 'info';\r\n      case QualityGoalPriority.LOW: return 'success';\r\n      default: return 'default';\r\n    }\r\n  };\r\n\r\n  const getStatusColor = (status: QualityGoalStatus) => {\r\n    switch (status) {\r\n      case QualityGoalStatus.ACTIVE: return 'success';\r\n      case QualityGoalStatus.INACTIVE: return 'warning';\r\n      case QualityGoalStatus.ARCHIVED: return 'default';\r\n      default: return 'default';\r\n    }\r\n  };\r\n\r\n  const getProgressColor = (progress: number) => {\r\n    if (progress >= 80) return 'success';\r\n    if (progress >= 60) return 'info';\r\n    if (progress >= 40) return 'warning';\r\n    return 'error';\r\n  };\r\n\r\n  const calculateProgress = (current: number, target: number) => {\r\n    if (target === 0) return 0;\r\n    return Math.min((current / target) * 100, 100);\r\n  };\r\n\r\n  const handleFilterChange = (filter: Partial<QualityGoalFilter>) => {\r\n    setState(prev => ({\r\n      ...prev,\r\n      filters: { ...prev.filters, ...filter },\r\n      pagination: { ...prev.pagination, page: 1 }\r\n    }));\r\n  };\r\n\r\n  const handlePageChange = (event: React.ChangeEvent<unknown>, page: number) => {\r\n    setState(prev => ({\r\n      ...prev,\r\n      pagination: { ...prev.pagination, page }\r\n    }));\r\n  };\r\n\r\n  const handleExport = async (format: 'csv' | 'pdf' | 'excel') => {\r\n    try {\r\n      const blob = await qualityGoalsService.exportQualityGoalsReport(format, state.filters);\r\n      const url = window.URL.createObjectURL(blob);\r\n      const a = document.createElement('a');\r\n      a.href = url;\r\n      a.download = `quality-goals-report.${format}`;\r\n      a.click();\r\n      window.URL.revokeObjectURL(url);\r\n    } catch (error) {\r\n      setState(prev => ({ ...prev, error: 'Failed to export report' }));\r\n    }\r\n  };\r\n\r\n  if (state.loading && state.goals.length === 0) {\r\n    return (\r\n      <Box sx={{ width: '100%' }}>\r\n        <LinearProgress />\r\n      </Box>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Container maxWidth=\"xl\">\r\n      <Box sx={{ my: 4 }}>\r\n        {/* Header */}\r\n        <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 3 }}>\r\n          <Typography variant=\"h4\" component=\"h1\" gutterBottom>\r\n            Quality Goals\r\n          </Typography>\r\n          <Box>\r\n            <Button\r\n              variant=\"outlined\"\r\n              startIcon={<AssessmentIcon />}\r\n              onClick={() => setState(prev => ({ ...prev, showMetrics: !prev.showMetrics }))}\r\n              sx={{ mr: 2 }}\r\n            >\r\n              {state.showMetrics ? 'Hide' : 'Show'} Metrics\r\n            </Button>\r\n            <Button\r\n              variant=\"contained\"\r\n              startIcon={<AddIcon />}\r\n              onClick={() => handleOpenDialog()}\r\n            >\r\n              Add Quality Goal\r\n            </Button>\r\n          </Box>\r\n        </Box>\r\n\r\n        {/* Metrics Section */}\r\n        {state.showMetrics && state.metrics && (\r\n          <Card sx={{ mb: 3 }}>\r\n            <CardContent>\r\n              <Typography variant=\"h6\" gutterBottom>\r\n                Quality Goals Overview\r\n              </Typography>\r\n              <Grid container spacing={3}>\r\n                <Grid item xs={12} sm={6} md={3}>\r\n                  <Box textAlign=\"center\">\r\n                    <Typography variant=\"h4\" color=\"primary\">\r\n                      {state.metrics.total_goals}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" color=\"textSecondary\">\r\n                      Total Goals\r\n                    </Typography>\r\n                  </Box>\r\n                </Grid>\r\n                <Grid item xs={12} sm={6} md={3}>\r\n                  <Box textAlign=\"center\">\r\n                    <Typography variant=\"h4\" color=\"success.main\">\r\n                      {state.metrics.active_goals}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" color=\"textSecondary\">\r\n                      Active Goals\r\n                    </Typography>\r\n                  </Box>\r\n                </Grid>\r\n                <Grid item xs={12} sm={6} md={3}>\r\n                  <Box textAlign=\"center\">\r\n                    <Typography variant=\"h4\" color=\"warning.main\">\r\n                      {state.metrics.overdue_goals}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" color=\"textSecondary\">\r\n                      Overdue Goals\r\n                    </Typography>\r\n                  </Box>\r\n                </Grid>\r\n                <Grid item xs={12} sm={6} md={3}>\r\n                  <Box textAlign=\"center\">\r\n                    <Typography variant=\"h4\" color=\"info.main\">\r\n                      {state.metrics.average_progress.toFixed(1)}%\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" color=\"textSecondary\">\r\n                      Average Progress\r\n                    </Typography>\r\n                  </Box>\r\n                </Grid>\r\n              </Grid>\r\n            </CardContent>\r\n          </Card>\r\n        )}\r\n\r\n        {/* Filters */}\r\n        <Card sx={{ mb: 3 }}>\r\n          <CardContent>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n              Filters\r\n            </Typography>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12} sm={6} md={3}>\r\n                <FormControl fullWidth size=\"small\">\r\n                  <InputLabel>Type</InputLabel>\r\n                  <Select\r\n                    value={state.filters.type || ''}\r\n                    onChange={(e) => handleFilterChange({ type: e.target.value as QualityGoalType })}\r\n                    label=\"Type\"\r\n                  >\r\n                    <MenuItem value=\"\">All Types</MenuItem>\r\n                    {Object.values(QualityGoalType).map((type) => (\r\n                      <MenuItem key={type} value={type}>{type}</MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </FormControl>\r\n              </Grid>\r\n              <Grid item xs={12} sm={6} md={3}>\r\n                <FormControl fullWidth size=\"small\">\r\n                  <InputLabel>Priority</InputLabel>\r\n                  <Select\r\n                    value={state.filters.priority || ''}\r\n                    onChange={(e) => handleFilterChange({ priority: e.target.value as QualityGoalPriority })}\r\n                    label=\"Priority\"\r\n                  >\r\n                    <MenuItem value=\"\">All Priorities</MenuItem>\r\n                    {Object.values(QualityGoalPriority).map((priority) => (\r\n                      <MenuItem key={priority} value={priority}>{priority}</MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </FormControl>\r\n              </Grid>\r\n              <Grid item xs={12} sm={6} md={3}>\r\n                <FormControl fullWidth size=\"small\">\r\n                  <InputLabel>Status</InputLabel>\r\n                  <Select\r\n                    value={state.filters.status || ''}\r\n                    onChange={(e) => handleFilterChange({ status: e.target.value as QualityGoalStatus })}\r\n                    label=\"Status\"\r\n                  >\r\n                    <MenuItem value=\"\">All Statuses</MenuItem>\r\n                    {Object.values(QualityGoalStatus).map((status) => (\r\n                      <MenuItem key={status} value={status}>{status}</MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </FormControl>\r\n              </Grid>\r\n              <Grid item xs={12} sm={6} md={3}>\r\n                <Button\r\n                  variant=\"outlined\"\r\n                  startIcon={<RefreshIcon />}\r\n                  onClick={loadGoals}\r\n                  fullWidth\r\n                >\r\n                  Refresh\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </CardContent>\r\n        </Card>\r\n\r\n        {/* Goals Table */}\r\n        <Card>\r\n          <CardContent>\r\n            <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 }}>\r\n              <Typography variant=\"h6\">\r\n                Quality Goals ({state.pagination.total})\r\n              </Typography>\r\n              <Box>\r\n                <Button\r\n                  size=\"small\"\r\n                  startIcon={<DownloadIcon />}\r\n                  onClick={() => handleExport('csv')}\r\n                  sx={{ mr: 1 }}\r\n                >\r\n                  CSV\r\n                </Button>\r\n                <Button\r\n                  size=\"small\"\r\n                  startIcon={<DownloadIcon />}\r\n                  onClick={() => handleExport('pdf')}\r\n                  sx={{ mr: 1 }}\r\n                >\r\n                  PDF\r\n                </Button>\r\n                <Button\r\n                  size=\"small\"\r\n                  startIcon={<DownloadIcon />}\r\n                  onClick={() => handleExport('excel')}\r\n                >\r\n                  Excel\r\n                </Button>\r\n              </Box>\r\n            </Box>\r\n\r\n            <TableContainer component={Paper}>\r\n              <Table>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell>Name</TableCell>\r\n                    <TableCell>Type</TableCell>\r\n                    <TableCell>Priority</TableCell>\r\n                    <TableCell>Status</TableCell>\r\n                    <TableCell>Progress</TableCell>\r\n                    <TableCell>Target</TableCell>\r\n                    <TableCell>Current</TableCell>\r\n                    <TableCell>Deadline</TableCell>\r\n                    <TableCell>Actions</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {state.goals.map((goal) => {\r\n                    const progress = calculateProgress(goal.current_value, goal.target_value);\r\n                    return (\r\n                      <TableRow key={goal.id}>\r\n                        <TableCell>\r\n                          <Box>\r\n                            <Typography variant=\"subtitle2\">{goal.name}</Typography>\r\n                            <Typography variant=\"body2\" color=\"textSecondary\">\r\n                              {goal.description}\r\n                            </Typography>\r\n                          </Box>\r\n                        </TableCell>\r\n                        <TableCell>\r\n                          <Chip label={goal.type} size=\"small\" />\r\n                        </TableCell>\r\n                        <TableCell>\r\n                          <Chip\r\n                            label={goal.priority}\r\n                            color={getPriorityColor(goal.priority) as any}\r\n                            size=\"small\"\r\n                          />\r\n                        </TableCell>\r\n                        <TableCell>\r\n                          <Chip\r\n                            label={goal.status}\r\n                            color={getStatusColor(goal.status) as any}\r\n                            size=\"small\"\r\n                          />\r\n                        </TableCell>\r\n                        <TableCell>\r\n                          <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                            <Box sx={{ width: '100%', mr: 1 }}>\r\n                              <LinearProgress\r\n                                variant=\"determinate\"\r\n                                value={progress}\r\n                                color={getProgressColor(progress) as any}\r\n                                sx={{ height: 8, borderRadius: 4 }}\r\n                              />\r\n                            </Box>\r\n                            <Typography variant=\"body2\" color=\"textSecondary\">\r\n                              {progress.toFixed(1)}%\r\n                            </Typography>\r\n                          </Box>\r\n                        </TableCell>\r\n                        <TableCell>\r\n                          <Typography variant=\"body2\">\r\n                            {goal.target_value} {goal.unit}\r\n                          </Typography>\r\n                        </TableCell>\r\n                        <TableCell>\r\n                          <Typography variant=\"body2\">\r\n                            {goal.current_value} {goal.unit}\r\n                          </Typography>\r\n                        </TableCell>\r\n                        <TableCell>\r\n                          {goal.deadline ? (\r\n                            <Typography variant=\"body2\">\r\n                              {new Date(goal.deadline).toLocaleDateString()}\r\n                            </Typography>\r\n                          ) : (\r\n                            <Typography variant=\"body2\" color=\"textSecondary\">\r\n                              No deadline\r\n                            </Typography>\r\n                          )}\r\n                        </TableCell>\r\n                        <TableCell>\r\n                          <Box>\r\n                            <IconButton\r\n                              size=\"small\"\r\n                              onClick={() => handleOpenDialog(goal)}\r\n                              color=\"primary\"\r\n                            >\r\n                              <EditIcon />\r\n                            </IconButton>\r\n                            <IconButton\r\n                              size=\"small\"\r\n                              onClick={() => handleDelete(goal.id)}\r\n                              color=\"error\"\r\n                            >\r\n                              <DeleteIcon />\r\n                            </IconButton>\r\n                          </Box>\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    );\r\n                  })}\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n\r\n            {/* Pagination */}\r\n            <Box sx={{ display: 'flex', justifyContent: 'center', mt: 3 }}>\r\n              <Pagination\r\n                count={Math.ceil(state.pagination.total / state.pagination.limit)}\r\n                page={state.pagination.page}\r\n                onChange={handlePageChange}\r\n                color=\"primary\"\r\n              />\r\n            </Box>\r\n          </CardContent>\r\n        </Card>\r\n      </Box>\r\n\r\n      {/* Add/Edit Dialog */}\r\n      <Dialog open={state.dialogOpen} onClose={handleCloseDialog} maxWidth=\"md\" fullWidth>\r\n        <DialogTitle>\r\n          {state.editMode ? 'Edit Quality Goal' : 'Add Quality Goal'}\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <Grid container spacing={2} sx={{ mt: 1 }}>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                fullWidth\r\n                label=\"Name\"\r\n                value={state.formData.name || ''}\r\n                onChange={(e) => setState(prev => ({\r\n                  ...prev,\r\n                  formData: { ...prev.formData, name: e.target.value }\r\n                }))}\r\n                required\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <FormControl fullWidth>\r\n                <InputLabel>Type</InputLabel>\r\n                <Select\r\n                  value={state.formData.type || QualityGoalType.SECURITY}\r\n                  onChange={(e) => setState(prev => ({\r\n                    ...prev,\r\n                    formData: { ...prev.formData, type: e.target.value as QualityGoalType }\r\n                  }))}\r\n                  label=\"Type\"\r\n                >\r\n                  {Object.values(QualityGoalType).map((type) => (\r\n                    <MenuItem key={type} value={type}>{type}</MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                fullWidth\r\n                label=\"Description\"\r\n                value={state.formData.description || ''}\r\n                onChange={(e) => setState(prev => ({\r\n                  ...prev,\r\n                  formData: { ...prev.formData, description: e.target.value }\r\n                }))}\r\n                multiline\r\n                rows={3}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <FormControl fullWidth>\r\n                <InputLabel>Priority</InputLabel>\r\n                <Select\r\n                  value={state.formData.priority || QualityGoalPriority.MEDIUM}\r\n                  onChange={(e) => setState(prev => ({\r\n                    ...prev,\r\n                    formData: { ...prev.formData, priority: e.target.value as QualityGoalPriority }\r\n                  }))}\r\n                  label=\"Priority\"\r\n                >\r\n                  {Object.values(QualityGoalPriority).map((priority) => (\r\n                    <MenuItem key={priority} value={priority}>{priority}</MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <FormControl fullWidth>\r\n                <InputLabel>Status</InputLabel>\r\n                <Select\r\n                  value={state.formData.status || QualityGoalStatus.ACTIVE}\r\n                  onChange={(e) => setState(prev => ({\r\n                    ...prev,\r\n                    formData: { ...prev.formData, status: e.target.value as QualityGoalStatus }\r\n                  }))}\r\n                  label=\"Status\"\r\n                >\r\n                  {Object.values(QualityGoalStatus).map((status) => (\r\n                    <MenuItem key={status} value={status}>{status}</MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item xs={12} sm={4}>\r\n              <TextField\r\n                fullWidth\r\n                label=\"Target Value\"\r\n                type=\"number\"\r\n                value={state.formData.target_value || ''}\r\n                onChange={(e) => setState(prev => ({\r\n                  ...prev,\r\n                  formData: { ...prev.formData, target_value: parseFloat(e.target.value) || 0 }\r\n                }))}\r\n                required\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={4}>\r\n              <TextField\r\n                fullWidth\r\n                label=\"Current Value\"\r\n                type=\"number\"\r\n                value={state.formData.current_value || ''}\r\n                onChange={(e) => setState(prev => ({\r\n                  ...prev,\r\n                  formData: { ...prev.formData, current_value: parseFloat(e.target.value) || 0 }\r\n                }))}\r\n                required\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={4}>\r\n              <TextField\r\n                fullWidth\r\n                label=\"Unit\"\r\n                value={state.formData.unit || ''}\r\n                onChange={(e) => setState(prev => ({\r\n                  ...prev,\r\n                  formData: { ...prev.formData, unit: e.target.value }\r\n                }))}\r\n                required\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                fullWidth\r\n                label=\"Deadline\"\r\n                type=\"date\"\r\n                value={state.formData.deadline || ''}\r\n                onChange={(e) => setState(prev => ({\r\n                  ...prev,\r\n                  formData: { ...prev.formData, deadline: e.target.value }\r\n                }))}\r\n                InputLabelProps={{ shrink: true }}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <FormControlLabel\r\n                control={\r\n                  <Switch\r\n                    checked={state.formData.status === QualityGoalStatus.ACTIVE}\r\n                    onChange={(e) => setState(prev => ({\r\n                      ...prev,\r\n                      formData: { ...prev.formData, status: e.target.checked ? QualityGoalStatus.ACTIVE : QualityGoalStatus.INACTIVE }\r\n                    }))}\r\n                  />\r\n                }\r\n                label=\"Active\"\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleCloseDialog}>Cancel</Button>\r\n          <Button onClick={handleSubmit} variant=\"contained\">\r\n            {state.editMode ? 'Update' : 'Create'}\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      {/* Error Snackbar */}\r\n      <Snackbar\r\n        open={!!state.error}\r\n        autoHideDuration={6000}\r\n        onClose={() => setState(prev => ({ ...prev, error: null }))}\r\n      >\r\n        <Alert severity=\"error\" onClose={() => setState(prev => ({ ...prev, error: null }))}>\r\n          {state.error}\r\n        </Alert>\r\n      </Snackbar>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default QualityGoals;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}