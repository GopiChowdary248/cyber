{"ast":null,"code":"var _jsxFileName = \"D:\\\\curser\\\\cyber-cursor\\\\frontend\\\\src\\\\contexts\\\\AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport toast from 'react-hot-toast';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(undefined);\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const navigate = useNavigate();\n  const API_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000';\n\n  // Check if user is already authenticated on app load\n  useEffect(() => {\n    console.log('AuthContext - useEffect triggered');\n    const token = localStorage.getItem('access_token');\n    console.log('AuthContext - token found:', !!token);\n    if (token) {\n      fetchUserProfile();\n    } else {\n      console.log('AuthContext - no token, setting loading to false');\n      setLoading(false);\n    }\n  }, []);\n  const fetchUserProfile = async () => {\n    try {\n      const token = localStorage.getItem('access_token');\n      if (!token) {\n        setLoading(false);\n        return;\n      }\n      const response = await fetch(`${API_URL}/api/v1/auth/me`, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      if (response.ok) {\n        const userData = await response.json();\n        setUser(userData);\n      } else {\n        // Token is invalid, clear it\n        localStorage.removeItem('access_token');\n        setUser(null);\n      }\n    } catch (error) {\n      console.error('Error fetching user profile:', error);\n      localStorage.removeItem('access_token');\n      setUser(null);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const login = async (email, password) => {\n    try {\n      setLoading(true);\n      const loginData = {\n        username: email,\n        // Backend expects 'username' field\n        password: password,\n        device_info: {\n          user_agent: navigator.userAgent,\n          platform: navigator.platform,\n          language: navigator.language\n        }\n      };\n      const response = await fetch(`${API_URL}/api/v1/auth/login`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(loginData)\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.detail || 'Login failed');\n      }\n      const data = await response.json();\n\n      // Store token\n      localStorage.setItem('access_token', data.access_token);\n\n      // Set user data\n      setUser({\n        id: data.user_id,\n        email: data.email,\n        username: data.email.split('@')[0],\n        // Fallback username\n        role: data.role,\n        is_active: true,\n        created_at: new Date().toISOString()\n      });\n      toast.success('Login successful!');\n      navigate('/dashboard');\n    } catch (error) {\n      console.error('Login error:', error);\n      toast.error(error instanceof Error ? error.message : 'Login failed');\n      throw error;\n    } finally {\n      setLoading(false);\n    }\n  };\n  const register = async userData => {\n    try {\n      setLoading(true);\n      const response = await fetch(`${API_URL}/api/v1/auth/register`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(userData)\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.detail || 'Registration failed');\n      }\n      const data = await response.json();\n      toast.success('Registration successful! Please log in.');\n      navigate('/login');\n    } catch (error) {\n      console.error('Registration error:', error);\n      toast.error(error instanceof Error ? error.message : 'Registration failed');\n      throw error;\n    } finally {\n      setLoading(false);\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('access_token');\n    setUser(null);\n    toast.success('Logged out successfully');\n    navigate('/login');\n  };\n  const updateProfile = async data => {\n    try {\n      const token = localStorage.getItem('access_token');\n      if (!token) {\n        throw new Error('No authentication token');\n      }\n      const response = await fetch(`${API_URL}/api/v1/users/me`, {\n        method: 'PUT',\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.detail || 'Profile update failed');\n      }\n      const updatedUser = await response.json();\n      setUser(updatedUser);\n      toast.success('Profile updated successfully');\n    } catch (error) {\n      console.error('Profile update error:', error);\n      toast.error(error instanceof Error ? error.message : 'Profile update failed');\n      throw error;\n    }\n  };\n  const value = {\n    user,\n    isAuthenticated: !!user,\n    loading,\n    login,\n    logout,\n    register,\n    updateProfile\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 230,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"lk6viekuCMMpYORkLYLEq0Wsfds=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","useNavigate","toast","jsxDEV","_jsxDEV","AuthContext","undefined","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","loading","setLoading","navigate","API_URL","process","env","REACT_APP_API_URL","console","log","token","localStorage","getItem","fetchUserProfile","response","fetch","headers","ok","userData","json","removeItem","error","login","email","password","loginData","username","device_info","user_agent","navigator","userAgent","platform","language","method","body","JSON","stringify","errorData","detail","data","setItem","access_token","id","user_id","split","role","is_active","created_at","Date","toISOString","success","message","register","logout","updateProfile","updatedUser","value","isAuthenticated","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/curser/cyber-cursor/frontend/src/contexts/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport toast from 'react-hot-toast';\r\n\r\ninterface User {\r\n  id: number;\r\n  email: string;\r\n  username: string;\r\n  full_name?: string;\r\n  role: string;\r\n  is_active: boolean;\r\n  created_at: string;\r\n}\r\n\r\ninterface AuthContextType {\r\n  user: User | null;\r\n  isAuthenticated: boolean;\r\n  loading: boolean;\r\n  login: (email: string, password: string) => Promise<void>;\r\n  logout: () => void;\r\n  register: (userData: RegisterData) => Promise<void>;\r\n  updateProfile: (data: Partial<User>) => Promise<void>;\r\n}\r\n\r\ninterface RegisterData {\r\n  email: string;\r\n  username: string;\r\n  password: string;\r\n  confirm_password: string;\r\n  full_name?: string;\r\n}\r\n\r\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (context === undefined) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\ninterface AuthProviderProps {\r\n  children: ReactNode;\r\n}\r\n\r\nexport const AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {\r\n  const [user, setUser] = useState<User | null>(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const navigate = useNavigate();\r\n\r\n  const API_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000';\r\n\r\n  // Check if user is already authenticated on app load\r\n  useEffect(() => {\r\n    console.log('AuthContext - useEffect triggered');\r\n    const token = localStorage.getItem('access_token');\r\n    console.log('AuthContext - token found:', !!token);\r\n    if (token) {\r\n      fetchUserProfile();\r\n    } else {\r\n      console.log('AuthContext - no token, setting loading to false');\r\n      setLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  const fetchUserProfile = async () => {\r\n    try {\r\n      const token = localStorage.getItem('access_token');\r\n      if (!token) {\r\n        setLoading(false);\r\n        return;\r\n      }\r\n\r\n      const response = await fetch(`${API_URL}/api/v1/auth/me`, {\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`,\r\n          'Content-Type': 'application/json',\r\n        },\r\n      });\r\n\r\n      if (response.ok) {\r\n        const userData = await response.json();\r\n        setUser(userData);\r\n      } else {\r\n        // Token is invalid, clear it\r\n        localStorage.removeItem('access_token');\r\n        setUser(null);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching user profile:', error);\r\n      localStorage.removeItem('access_token');\r\n      setUser(null);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const login = async (email: string, password: string) => {\r\n    try {\r\n      setLoading(true);\r\n      \r\n      const loginData = {\r\n        username: email, // Backend expects 'username' field\r\n        password: password,\r\n        device_info: {\r\n          user_agent: navigator.userAgent,\r\n          platform: navigator.platform,\r\n          language: navigator.language\r\n        }\r\n      };\r\n\r\n      const response = await fetch(`${API_URL}/api/v1/auth/login`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(loginData),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        throw new Error(errorData.detail || 'Login failed');\r\n      }\r\n\r\n      const data = await response.json();\r\n      \r\n      // Store token\r\n      localStorage.setItem('access_token', data.access_token);\r\n      \r\n      // Set user data\r\n      setUser({\r\n        id: data.user_id,\r\n        email: data.email,\r\n        username: data.email.split('@')[0], // Fallback username\r\n        role: data.role,\r\n        is_active: true,\r\n        created_at: new Date().toISOString(),\r\n      });\r\n\r\n      toast.success('Login successful!');\r\n      navigate('/dashboard');\r\n    } catch (error) {\r\n      console.error('Login error:', error);\r\n      toast.error(error instanceof Error ? error.message : 'Login failed');\r\n      throw error;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const register = async (userData: RegisterData) => {\r\n    try {\r\n      setLoading(true);\r\n\r\n      const response = await fetch(`${API_URL}/api/v1/auth/register`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(userData),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        throw new Error(errorData.detail || 'Registration failed');\r\n      }\r\n\r\n      const data = await response.json();\r\n      toast.success('Registration successful! Please log in.');\r\n      navigate('/login');\r\n    } catch (error) {\r\n      console.error('Registration error:', error);\r\n      toast.error(error instanceof Error ? error.message : 'Registration failed');\r\n      throw error;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem('access_token');\r\n    setUser(null);\r\n    toast.success('Logged out successfully');\r\n    navigate('/login');\r\n  };\r\n\r\n  const updateProfile = async (data: Partial<User>) => {\r\n    try {\r\n      const token = localStorage.getItem('access_token');\r\n      if (!token) {\r\n        throw new Error('No authentication token');\r\n      }\r\n\r\n      const response = await fetch(`${API_URL}/api/v1/users/me`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`,\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(data),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        throw new Error(errorData.detail || 'Profile update failed');\r\n      }\r\n\r\n      const updatedUser = await response.json();\r\n      setUser(updatedUser);\r\n      toast.success('Profile updated successfully');\r\n    } catch (error) {\r\n      console.error('Profile update error:', error);\r\n      toast.error(error instanceof Error ? error.message : 'Profile update failed');\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const value: AuthContextType = {\r\n    user,\r\n    isAuthenticated: !!user,\r\n    loading,\r\n    login,\r\n    logout,\r\n    register,\r\n    updateProfile,\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}