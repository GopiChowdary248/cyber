{"ast":null,"code":"import axios from'axios';// Create axios instance with default configuration\nconst apiClient=axios.create({baseURL:process.env.REACT_APP_API_URL||'http://localhost:8000',timeout:30000,// Increased timeout for complex operations\nheaders:{'Content-Type':'application/json'}});// Request interceptor to add auth token\napiClient.interceptors.request.use(config=>{const token=localStorage.getItem('access_token');if(token){config.headers.Authorization=\"Bearer \".concat(token);}return config;},error=>{return Promise.reject(error);});// Response interceptor for error handling\napiClient.interceptors.response.use(response=>response,async error=>{var _error$response;if(((_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.status)===401){// Token expired or invalid, redirect to login\nlocalStorage.removeItem('access_token');localStorage.removeItem('user');window.location.href='/login';}return Promise.reject(error);});// Generic API methods\nexport const api={// GET request\nget:(url,config)=>apiClient.get(url,config).then(response=>response.data),// POST request\npost:(url,data,config)=>apiClient.post(url,data,config).then(response=>response.data),// PUT request\nput:(url,data,config)=>apiClient.put(url,data,config).then(response=>response.data),// DELETE request\ndelete:(url,config)=>apiClient.delete(url,config).then(response=>response.data),// PATCH request\npatch:(url,data,config)=>apiClient.patch(url,data,config).then(response=>response.data)};export default apiClient;","map":{"version":3,"names":["axios","apiClient","create","baseURL","process","env","REACT_APP_API_URL","timeout","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","concat","error","Promise","reject","response","_error$response","status","removeItem","window","location","href","api","get","url","then","data","post","put","delete","patch"],"sources":["D:/curser/copy-of-git-10-082025/cyber-cursor/frontend/src/services/apiClient.ts"],"sourcesContent":["import axios, { AxiosError, AxiosResponse, AxiosRequestConfig } from 'axios';\r\n\r\n// Create axios instance with default configuration\r\nconst apiClient = axios.create({\r\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:8000',\r\n  timeout: 30000, // Increased timeout for complex operations\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Request interceptor to add auth token\r\napiClient.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem('access_token');\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Response interceptor for error handling\r\napiClient.interceptors.response.use(\r\n  (response: AxiosResponse) => response,\r\n  async (error: AxiosError) => {\r\n    if (error.response?.status === 401) {\r\n      // Token expired or invalid, redirect to login\r\n      localStorage.removeItem('access_token');\r\n      localStorage.removeItem('user');\r\n      window.location.href = '/login';\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Generic API methods\r\nexport const api = {\r\n  // GET request\r\n  get: <T = any>(url: string, config?: AxiosRequestConfig): Promise<T> =>\r\n    apiClient.get(url, config).then(response => response.data),\r\n\r\n  // POST request\r\n  post: <T = any>(url: string, data?: any, config?: AxiosRequestConfig): Promise<T> =>\r\n    apiClient.post(url, data, config).then(response => response.data),\r\n\r\n  // PUT request\r\n  put: <T = any>(url: string, data?: any, config?: AxiosRequestConfig): Promise<T> =>\r\n    apiClient.put(url, data, config).then(response => response.data),\r\n\r\n  // DELETE request\r\n  delete: <T = any>(url: string, config?: AxiosRequestConfig): Promise<T> =>\r\n    apiClient.delete(url, config).then(response => response.data),\r\n\r\n  // PATCH request\r\n  patch: <T = any>(url: string, data?: any, config?: AxiosRequestConfig): Promise<T> =>\r\n    apiClient.patch(url, data, config).then(response => response.data),\r\n};\r\n\r\nexport default apiClient;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAyD,OAAO,CAE5E;AACA,KAAM,CAAAC,SAAS,CAAGD,KAAK,CAACE,MAAM,CAAC,CAC7BC,OAAO,CAAEC,OAAO,CAACC,GAAG,CAACC,iBAAiB,EAAI,uBAAuB,CACjEC,OAAO,CAAE,KAAK,CAAE;AAChBC,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CACF,CAAC,CAAC,CAEF;AACAP,SAAS,CAACQ,YAAY,CAACC,OAAO,CAACC,GAAG,CAC/BC,MAAM,EAAK,CACV,KAAM,CAAAC,KAAK,CAAGC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC,CAClD,GAAIF,KAAK,CAAE,CACTD,MAAM,CAACJ,OAAO,CAACQ,aAAa,WAAAC,MAAA,CAAaJ,KAAK,CAAE,CAClD,CACA,MAAO,CAAAD,MAAM,CACf,CAAC,CACAM,KAAK,EAAK,CACT,MAAO,CAAAC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC,CAC9B,CACF,CAAC,CAED;AACAjB,SAAS,CAACQ,YAAY,CAACY,QAAQ,CAACV,GAAG,CAChCU,QAAuB,EAAKA,QAAQ,CACrC,KAAO,CAAAH,KAAiB,EAAK,KAAAI,eAAA,CAC3B,GAAI,EAAAA,eAAA,CAAAJ,KAAK,CAACG,QAAQ,UAAAC,eAAA,iBAAdA,eAAA,CAAgBC,MAAM,IAAK,GAAG,CAAE,CAClC;AACAT,YAAY,CAACU,UAAU,CAAC,cAAc,CAAC,CACvCV,YAAY,CAACU,UAAU,CAAC,MAAM,CAAC,CAC/BC,MAAM,CAACC,QAAQ,CAACC,IAAI,CAAG,QAAQ,CACjC,CACA,MAAO,CAAAR,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC,CAC9B,CACF,CAAC,CAED;AACA,MAAO,MAAM,CAAAU,GAAG,CAAG,CACjB;AACAC,GAAG,CAAEA,CAAUC,GAAW,CAAElB,MAA2B,GACrDX,SAAS,CAAC4B,GAAG,CAACC,GAAG,CAAElB,MAAM,CAAC,CAACmB,IAAI,CAACV,QAAQ,EAAIA,QAAQ,CAACW,IAAI,CAAC,CAE5D;AACAC,IAAI,CAAEA,CAAUH,GAAW,CAAEE,IAAU,CAAEpB,MAA2B,GAClEX,SAAS,CAACgC,IAAI,CAACH,GAAG,CAAEE,IAAI,CAAEpB,MAAM,CAAC,CAACmB,IAAI,CAACV,QAAQ,EAAIA,QAAQ,CAACW,IAAI,CAAC,CAEnE;AACAE,GAAG,CAAEA,CAAUJ,GAAW,CAAEE,IAAU,CAAEpB,MAA2B,GACjEX,SAAS,CAACiC,GAAG,CAACJ,GAAG,CAAEE,IAAI,CAAEpB,MAAM,CAAC,CAACmB,IAAI,CAACV,QAAQ,EAAIA,QAAQ,CAACW,IAAI,CAAC,CAElE;AACAG,MAAM,CAAEA,CAAUL,GAAW,CAAElB,MAA2B,GACxDX,SAAS,CAACkC,MAAM,CAACL,GAAG,CAAElB,MAAM,CAAC,CAACmB,IAAI,CAACV,QAAQ,EAAIA,QAAQ,CAACW,IAAI,CAAC,CAE/D;AACAI,KAAK,CAAEA,CAAUN,GAAW,CAAEE,IAAU,CAAEpB,MAA2B,GACnEX,SAAS,CAACmC,KAAK,CAACN,GAAG,CAAEE,IAAI,CAAEpB,MAAM,CAAC,CAACmB,IAAI,CAACV,QAAQ,EAAIA,QAAQ,CAACW,IAAI,CACrE,CAAC,CAED,cAAe,CAAA/B,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}