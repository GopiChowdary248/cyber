{"ast":null,"code":"import { apiClient, apiCallWithRetry } from '../utils/apiClient';\n\n// Comprehensive endpoint mapping for all backend services\nexport const API_ENDPOINTS = {\n  // Authentication & User Management\n  AUTH: {\n    LOGIN: '/auth/login',\n    REGISTER: '/auth/register',\n    REFRESH: '/auth/refresh',\n    LOGOUT: '/auth/logout',\n    ME: '/auth/me',\n    CHANGE_PASSWORD: '/auth/change-password',\n    FORGOT_PASSWORD: '/auth/forgot-password',\n    RESET_PASSWORD: '/auth/reset-password',\n    LOGOUT_ALL: '/auth/logout-all'\n  },\n  USERS: {\n    LIST: '/users',\n    CREATE: '/users',\n    GET: id => `/users/${id}`,\n    UPDATE: id => `/users/${id}`,\n    DELETE: id => `/users/${id}`,\n    BULK_UPDATE: '/users/bulk-update',\n    BULK_DELETE: '/users/bulk-delete'\n  },\n  MFA: {\n    SETUP: '/mfa/setup',\n    VERIFY: '/mfa/verify',\n    DISABLE: '/mfa/disable',\n    BACKUP_CODES: '/mfa/backup-codes',\n    RECOVERY: '/mfa/recovery'\n  },\n  ADMIN: {\n    DASHBOARD: '/admin/dashboard',\n    USERS: '/admin/users',\n    SYSTEM_STATUS: '/admin/system-status',\n    AUDIT_LOGS: '/admin/audit-logs',\n    SETTINGS: '/admin/settings'\n  },\n  // Security Testing\n  SAST: {\n    DASHBOARD: '/sast/dashboard',\n    OVERVIEW: '/sast/overview',\n    PROJECTS: '/sast/projects',\n    PROJECT: id => `/sast/projects/${id}`,\n    SCANS: '/sast/scans',\n    SCAN: id => `/sast/scans/${id}`,\n    VULNERABILITIES: '/sast/vulnerabilities',\n    SECURITY_HOTSPOTS: '/sast/security-hotspots',\n    QUALITY_GATES: '/sast/quality-gates',\n    CODE_COVERAGE: '/sast/code-coverage',\n    DUPLICATIONS: '/sast/duplications',\n    STATISTICS: '/sast/statistics',\n    RULES: '/sast/rules',\n    LANGUAGES: '/sast/languages',\n    CONFIGURATION: id => `/sast/projects/${id}/configuration`,\n    METRICS: id => `/sast/projects/${id}/metrics`,\n    TRENDS: id => `/sast/projects/${id}/trends`,\n    SECURITY_REPORTS: id => `/sast/projects/${id}/security-reports`,\n    RELIABILITY: id => `/sast/projects/${id}/reliability`,\n    MAINTAINABILITY: id => `/sast/projects/${id}/maintainability`,\n    ACTIVITY: id => `/sast/projects/${id}/activity`\n  },\n  DAST: {\n    OVERVIEW: '/dast/overview',\n    PROJECTS: '/dast/projects',\n    PROJECT: id => `/dast/projects/${id}`,\n    SCANS: '/dast/scans',\n    SCAN: id => `/dast/scans/${id}`,\n    VULNERABILITIES: '/dast/vulnerabilities',\n    PAYLOADS: '/dast/payloads',\n    REPORTS: id => `/dast/reports/${id}`,\n    WEBHOOK: '/dast/webhook'\n  },\n  RASP: {\n    AGENTS: '/rasp/agents',\n    AGENT: id => `/rasp/agents/${id}`,\n    ATTACKS: '/rasp/attacks',\n    ATTACK: id => `/rasp/attacks/${id}`,\n    RULES: '/rasp/rules',\n    RULE: id => `/rasp/rules/${id}`,\n    VULNERABILITIES: '/rasp/vulnerabilities',\n    VULNERABILITY: id => `/rasp/vulnerabilities/${id}`,\n    VIRTUAL_PATCHES: '/rasp/virtual-patches',\n    ALERTS: '/rasp/alerts',\n    ALERT: id => `/rasp/alerts/${id}`,\n    INTEGRATIONS: '/rasp/integrations',\n    DASHBOARD_OVERVIEW: '/rasp/dashboard/overview',\n    ATTACK_SUMMARY: '/rasp/dashboard/attack-summary',\n    AGENT_STATUS: '/rasp/dashboard/agent-status',\n    HEARTBEAT: id => `/rasp/agents/${id}/heartbeat`,\n    WEBHOOK: '/rasp/webhook'\n  },\n  APPLICATION_SECURITY: {\n    OVERVIEW: '/application-security/overview',\n    VULNERABILITIES: '/application-security/vulnerabilities',\n    SCANS: '/application-security/scans',\n    REPORTS: '/application-security/reports',\n    CONFIGURATION: '/application-security/configuration'\n  },\n  // Cloud Security\n  CLOUD_SECURITY: {\n    CONFIGS: '/cloud-security/configs',\n    CONFIG: id => `/cloud-security/configs/${id}`,\n    SCANS: '/cloud-security/scans',\n    SCAN: id => `/cloud-security/scans/${id}`,\n    FINDINGS: '/cloud-security/findings',\n    FINDING: id => `/cloud-security/findings/${id}`,\n    COMPLIANCE_CHECKS: '/cloud-security/compliance-checks',\n    COMPLIANCE_CHECK: id => `/cloud-security/compliance-checks/${id}`,\n    ASSETS: id => `/cloud-security/accounts/${id}/assets`,\n    ASSET: id => `/cloud-security/accounts/${id}/assets`,\n    MISCONFIGURATIONS: '/cloud-security/misconfigurations',\n    SAAS_APPLICATIONS: '/cloud-security/saas-applications',\n    USER_ACTIVITIES: '/cloud-security/user-activities',\n    DLP_INCIDENTS: '/cloud-security/dlp-incidents',\n    THREATS: '/cloud-security/threats',\n    IAM_RISKS: '/cloud-security/iam-risks',\n    DDOS_PROTECTION: '/cloud-security/ddos-protection',\n    DASHBOARD: '/cloud-security/dashboard',\n    METRICS: '/cloud-security/metrics',\n    STATS: '/cloud-security/stats',\n    ACTIVITY: '/cloud-security/activity',\n    SCAN_INITIATE: '/cloud-security/scan/initiate',\n    REMEDIATE: '/cloud-security/remediate',\n    AWS_FINDINGS: id => `/cloud-security/aws/${id}/findings`,\n    AWS_INSIGHTS: id => `/cloud-security/aws/${id}/insights`,\n    AWS_SYNC: id => `/cloud-security/aws/${id}/sync`,\n    AZURE_RECOMMENDATIONS: id => `/cloud-security/azure/${id}/recommendations`,\n    AZURE_ALERTS: id => `/cloud-security/azure/${id}/alerts`,\n    AZURE_SYNC: id => `/cloud-security/azure/${id}/sync`,\n    GCP_FINDINGS: id => `/cloud-security/gcp/${id}/findings`,\n    GCP_SOURCES: id => `/cloud-security/gcp/${id}/sources`,\n    GCP_SYNC: id => `/cloud-security/gcp/${id}/sync`,\n    REMEDIATE_FINDING: id => `/cloud-security/findings/${id}/remediate`,\n    BULK_UPDATE: '/cloud-security/findings/bulk-update',\n    EXPORT_REPORT: '/cloud-security/reports/export',\n    REAL_TIME_MONITORING: id => `/cloud-security/configs/${id}/monitoring`,\n    REAL_TIME_ALERTS: id => `/cloud-security/configs/${id}/alerts`,\n    COST_ANALYSIS: id => `/cloud-security/accounts/${id}/cost-analysis`,\n    COST_OPTIMIZATION: id => `/cloud-security/accounts/${id}/cost-optimization`,\n    SUBSCRIBE_UPDATES: id => `/cloud-security/accounts/${id}/subscribe`\n  },\n  ENHANCED_CLOUD_SECURITY: {\n    OVERVIEW: '/enhanced-cloud-security/overview',\n    THREATS: '/enhanced-cloud-security/threats',\n    COMPLIANCE: '/enhanced-cloud-security/compliance',\n    GOVERNANCE: '/enhanced-cloud-security/governance',\n    COST_MANAGEMENT: '/enhanced-cloud-security/cost-management'\n  },\n  // Network & Endpoint Security\n  NETWORK_SECURITY: {\n    OVERVIEW: '/network-security/overview',\n    FIREWALLS: '/network-security/firewalls',\n    INTRUSION_DETECTION: '/network-security/intrusion-detection',\n    VULNERABILITY_SCANS: '/network-security/vulnerability-scans',\n    PENETRATION_TESTS: '/network-security/penetration-tests',\n    NETWORK_MONITORING: '/network-security/monitoring',\n    TRAFFIC_ANALYSIS: '/network-security/traffic-analysis',\n    THREAT_DETECTION: '/network-security/threat-detection',\n    INCIDENT_RESPONSE: '/network-security/incident-response'\n  },\n  ENDPOINT_SECURITY: {\n    OVERVIEW: '/endpoint-security/overview',\n    AGENTS: '/endpoint-security/agents',\n    THREATS: '/endpoint-security/threats',\n    POLICIES: '/endpoint-security/policies',\n    COMPLIANCE: '/endpoint-security/compliance',\n    INCIDENTS: '/endpoint-security/incidents'\n  },\n  ENDPOINT_ANTIVIRUS_EDR: {\n    OVERVIEW: '/endpoint-antivirus-edr/overview',\n    SCANS: '/endpoint-antivirus-edr/scans',\n    THREATS: '/endpoint-antivirus-edr/threats',\n    QUARANTINE: '/endpoint-antivirus-edr/quarantine',\n    POLICIES: '/endpoint-antivirus-edr/policies',\n    REPORTS: '/endpoint-antivirus-edr/reports'\n  },\n  DEVICE_CONTROL: {\n    OVERVIEW: '/device-control/overview',\n    DEVICES: '/device-control/devices',\n    POLICIES: '/device-control/policies',\n    COMPLIANCE: '/device-control/compliance',\n    REPORTS: '/device-control/reports'\n  },\n  // Data Security\n  DATA_SECURITY: {\n    OVERVIEW: '/data-security/overview',\n    CLASSIFICATION: '/data-security/classification',\n    ENCRYPTION: '/data-security/encryption',\n    ACCESS_CONTROL: '/data-security/access-control',\n    AUDIT_LOGS: '/data-security/audit-logs',\n    COMPLIANCE: '/data-security/compliance',\n    INCIDENTS: '/data-security/incidents'\n  },\n  DATA_PROTECTION: {\n    OVERVIEW: '/data-protection/overview',\n    BACKUP: '/data-protection/backup',\n    RECOVERY: '/data-protection/recovery',\n    ARCHIVING: '/data-protection/archiving',\n    COMPLIANCE: '/data-protection/compliance',\n    REPORTS: '/data-protection/reports'\n  },\n  // Monitoring & Analytics\n  SIEM_SOAR: {\n    OVERVIEW: '/siem-soar/overview',\n    ALERTS: '/siem-soar/alerts',\n    INCIDENTS: '/siem-soar/incidents',\n    PLAYBOOKS: '/siem-soar/playbooks',\n    INTEGRATIONS: '/siem-soar/integrations',\n    REPORTS: '/siem-soar/reports'\n  },\n  MONITORING_SIEM_SOAR: {\n    OVERVIEW: '/monitoring-siem-soar/overview',\n    DASHBOARDS: '/monitoring-siem-soar/dashboards',\n    ALERTS: '/monitoring-siem-soar/alerts',\n    METRICS: '/monitoring-siem-soar/metrics',\n    REPORTS: '/monitoring-siem-soar/reports'\n  },\n  ANALYTICS: {\n    OVERVIEW: '/analytics/overview',\n    DASHBOARDS: '/analytics/dashboards',\n    REPORTS: '/analytics/reports',\n    METRICS: '/analytics/metrics',\n    TRENDS: '/analytics/trends',\n    INSIGHTS: '/analytics/insights'\n  },\n  THREAT_INTELLIGENCE: {\n    OVERVIEW: '/threat-intelligence/overview',\n    THREATS: '/threat-intelligence/threats',\n    INDICATORS: '/threat-intelligence/indicators',\n    FEEDS: '/threat-intelligence/feeds',\n    REPORTS: '/threat-intelligence/reports',\n    INTEGRATIONS: '/threat-intelligence/integrations'\n  },\n  // Compliance & Governance\n  COMPLIANCE: {\n    OVERVIEW: '/compliance/overview',\n    FRAMEWORKS: '/compliance/frameworks',\n    ASSESSMENTS: '/compliance/assessments',\n    REPORTS: '/compliance/reports',\n    AUDITS: '/compliance/audits',\n    REMEDIATION: '/compliance/remediation'\n  },\n  QUALITY_GOALS: {\n    OVERVIEW: '/quality-goals/overview',\n    GOALS: '/quality-goals/goals',\n    METRICS: '/quality-goals/metrics',\n    REPORTS: '/quality-goals/reports',\n    DASHBOARDS: '/quality-goals/dashboards'\n  },\n  WORKFLOWS: {\n    OVERVIEW: '/workflows/overview',\n    WORKFLOWS: '/workflows/workflows',\n    TEMPLATES: '/workflows/templates',\n    EXECUTIONS: '/workflows/executions',\n    REPORTS: '/workflows/reports'\n  },\n  // Incident Management\n  INCIDENTS: {\n    OVERVIEW: '/incidents/overview',\n    INCIDENTS: '/incidents/incidents',\n    INCIDENT: id => `/incidents/incidents/${id}`,\n    RESPONSE: '/incidents/response',\n    REPORTS: '/incidents/reports',\n    METRICS: '/incidents/metrics'\n  },\n  PHISHING: {\n    OVERVIEW: '/phishing/overview',\n    DETECTIONS: '/phishing/detections',\n    REPORTS: '/phishing/reports',\n    TRAINING: '/phishing/training',\n    METRICS: '/phishing/metrics'\n  },\n  // CI/CD & DevOps\n  CICD: {\n    OVERVIEW: '/cicd/overview',\n    PIPELINES: '/cicd/pipelines',\n    DEPLOYMENTS: '/cicd/deployments',\n    SECURITY_SCANS: '/cicd/security-scans',\n    COMPLIANCE_CHECKS: '/cicd/compliance-checks',\n    REPORTS: '/cicd/reports'\n  },\n  INTEGRATIONS: {\n    OVERVIEW: '/integrations/overview',\n    INTEGRATIONS: '/integrations/integrations',\n    CONFIGURATIONS: '/integrations/configurations',\n    WEBHOOKS: '/integrations/webhooks',\n    REPORTS: '/integrations/reports'\n  },\n  // Other Services\n  DASHBOARD: {\n    OVERVIEW: '/dashboard/overview',\n    STATS: '/dashboard/stats',\n    METRICS: '/dashboard/metrics',\n    REPORTS: '/dashboard/reports'\n  },\n  PROJECTS: {\n    OVERVIEW: '/projects/overview',\n    PROJECTS: '/projects/projects',\n    PROJECT: id => `/projects/projects/${id}`,\n    MEMBERS: id => `/projects/projects/${id}/members`,\n    SETTINGS: id => `/projects/projects/${id}/settings`,\n    REPORTS: id => `/projects/projects/${id}/reports`\n  },\n  REPORTS: {\n    OVERVIEW: '/reports/overview',\n    REPORTS: '/reports/reports',\n    REPORT: id => `/reports/reports/${id}`,\n    GENERATE: '/reports/generate',\n    EXPORT: '/reports/export',\n    SCHEDULE: '/reports/schedule'\n  },\n  HEALTH: {\n    STATUS: '/health/status',\n    DETAILS: '/health/details',\n    METRICS: '/health/metrics'\n  },\n  WEBSOCKET: {\n    CONNECT: '/ws/connect',\n    SUBSCRIBE: '/ws/subscribe',\n    UNSUBSCRIBE: '/ws/unsubscribe'\n  }\n};\n\n// Service mapping for frontend components\nexport const SERVICE_MAPPING = {\n  // Core Services\n  AUTH: 'authService',\n  USERS: 'userService',\n  MFA: 'mfaService',\n  ADMIN: 'adminService',\n  // Security Testing Services\n  SAST: 'sastService',\n  DAST: 'dastService',\n  RASP: 'raspService',\n  APPLICATION_SECURITY: 'applicationSecurityService',\n  // Cloud Security Services\n  CLOUD_SECURITY: 'cloudSecurityService',\n  ENHANCED_CLOUD_SECURITY: 'enhancedCloudSecurityService',\n  // Network & Endpoint Services\n  NETWORK_SECURITY: 'networkSecurityService',\n  ENDPOINT_SECURITY: 'endpointSecurityService',\n  ENDPOINT_ANTIVIRUS_EDR: 'endpointAntivirusEdrService',\n  DEVICE_CONTROL: 'deviceControlService',\n  // Data Security Services\n  DATA_SECURITY: 'dataSecurityService',\n  DATA_PROTECTION: 'dataProtectionService',\n  // Monitoring Services\n  SIEM_SOAR: 'siemSoarService',\n  MONITORING_SIEM_SOAR: 'monitoringSiemSoarService',\n  ANALYTICS: 'analyticsService',\n  THREAT_INTELLIGENCE: 'threatIntelligenceService',\n  // Compliance Services\n  COMPLIANCE: 'complianceService',\n  QUALITY_GOALS: 'qualityGoalsService',\n  WORKFLOWS: 'workflowsService',\n  // Incident Management Services\n  INCIDENTS: 'incidentService',\n  PHISHING: 'phishingService',\n  // DevOps Services\n  CICD: 'cicdService',\n  INTEGRATIONS: 'integrationsService',\n  // Other Services\n  DASHBOARD: 'dashboardService',\n  PROJECTS: 'projectsService',\n  REPORTS: 'reportsService',\n  HEALTH: 'healthService',\n  WEBSOCKET: 'websocketService'\n};\n\n// Integration status tracking\n\n// Main integration service class\nclass IntegrationService {\n  constructor() {\n    this.integrationStatus = new Map();\n  }\n  /**\r\n   * Check the health of all backend endpoints\r\n   */\n  async checkAllEndpoints() {\n    const statusChecks = Object.entries(API_ENDPOINTS).map(async ([service, endpoints]) => {\n      const serviceEndpoints = Object.values(endpoints).filter(endpoint => typeof endpoint === 'string' && !endpoint.includes('{'));\n      for (const endpoint of serviceEndpoints) {\n        // Skip function endpoints, only process string endpoints\n        if (typeof endpoint !== 'string') continue;\n        try {\n          const startTime = Date.now();\n          const response = await apiCallWithRetry(() => apiClient.get(endpoint));\n          const responseTime = Date.now() - startTime;\n          this.integrationStatus.set(`${service}_${endpoint}`, {\n            service,\n            status: 'connected',\n            lastCheck: new Date(),\n            endpoint,\n            responseTime\n          });\n        } catch (error) {\n          this.integrationStatus.set(`${service}_${endpoint}`, {\n            service,\n            status: 'error',\n            lastCheck: new Date(),\n            endpoint,\n            error: error.message\n          });\n        }\n      }\n    });\n    await Promise.all(statusChecks);\n    return this.integrationStatus;\n  }\n\n  /**\r\n   * Get integration status for a specific service\r\n   */\n  getServiceStatus(service) {\n    return Array.from(this.integrationStatus.values()).filter(status => status.service === service);\n  }\n\n  /**\r\n   * Get overall integration health\r\n   */\n  getOverallHealth() {\n    const total = this.integrationStatus.size;\n    const healthy = Array.from(this.integrationStatus.values()).filter(status => status.status === 'connected').length;\n    return {\n      healthy,\n      total,\n      percentage: total > 0 ? Math.round(healthy / total * 100) : 0\n    };\n  }\n\n  /**\r\n   * Get all available endpoints for a service\r\n   */\n  getServiceEndpoints(service) {\n    return API_ENDPOINTS[service] || {};\n  }\n\n  /**\r\n   * Get the corresponding frontend service name\r\n   */\n  getFrontendService(backendService) {\n    return SERVICE_MAPPING[backendService] || 'unknown';\n  }\n\n  /**\r\n   * Test a specific endpoint\r\n   */\n  async testEndpoint(endpoint) {\n    try {\n      const startTime = Date.now();\n      await apiCallWithRetry(() => apiClient.get(endpoint));\n      const responseTime = Date.now() - startTime;\n      return {\n        success: true,\n        responseTime\n      };\n    } catch (error) {\n      return {\n        success: false,\n        responseTime: 0,\n        error: error.message\n      };\n    }\n  }\n\n  /**\r\n   * Get all services that need attention (errors or disconnections)\r\n   */\n  getServicesNeedingAttention() {\n    return Array.from(this.integrationStatus.values()).filter(status => status.status !== 'connected');\n  }\n\n  /**\r\n   * Export integration status report\r\n   */\n  exportStatusReport() {\n    const health = this.getOverallHealth();\n    const servicesNeedingAttention = this.getServicesNeedingAttention();\n    let report = `Integration Status Report - ${new Date().toISOString()}\\n`;\n    report += `Overall Health: ${health.percentage}% (${health.healthy}/${health.total})\\n\\n`;\n    if (servicesNeedingAttention.length > 0) {\n      report += `Services Needing Attention:\\n`;\n      servicesNeedingAttention.forEach(status => {\n        report += `- ${status.service}: ${status.status} - ${status.error || 'Unknown error'}\\n`;\n      });\n    } else {\n      report += `All services are healthy!\\n`;\n    }\n    return report;\n  }\n}\n\n// Export singleton instance\nexport const integrationService = new IntegrationService();\nexport default IntegrationService;","map":{"version":3,"names":["apiClient","apiCallWithRetry","API_ENDPOINTS","AUTH","LOGIN","REGISTER","REFRESH","LOGOUT","ME","CHANGE_PASSWORD","FORGOT_PASSWORD","RESET_PASSWORD","LOGOUT_ALL","USERS","LIST","CREATE","GET","id","UPDATE","DELETE","BULK_UPDATE","BULK_DELETE","MFA","SETUP","VERIFY","DISABLE","BACKUP_CODES","RECOVERY","ADMIN","DASHBOARD","SYSTEM_STATUS","AUDIT_LOGS","SETTINGS","SAST","OVERVIEW","PROJECTS","PROJECT","SCANS","SCAN","VULNERABILITIES","SECURITY_HOTSPOTS","QUALITY_GATES","CODE_COVERAGE","DUPLICATIONS","STATISTICS","RULES","LANGUAGES","CONFIGURATION","METRICS","TRENDS","SECURITY_REPORTS","RELIABILITY","MAINTAINABILITY","ACTIVITY","DAST","PAYLOADS","REPORTS","WEBHOOK","RASP","AGENTS","AGENT","ATTACKS","ATTACK","RULE","VULNERABILITY","VIRTUAL_PATCHES","ALERTS","ALERT","INTEGRATIONS","DASHBOARD_OVERVIEW","ATTACK_SUMMARY","AGENT_STATUS","HEARTBEAT","APPLICATION_SECURITY","CLOUD_SECURITY","CONFIGS","CONFIG","FINDINGS","FINDING","COMPLIANCE_CHECKS","COMPLIANCE_CHECK","ASSETS","ASSET","MISCONFIGURATIONS","SAAS_APPLICATIONS","USER_ACTIVITIES","DLP_INCIDENTS","THREATS","IAM_RISKS","DDOS_PROTECTION","STATS","SCAN_INITIATE","REMEDIATE","AWS_FINDINGS","AWS_INSIGHTS","AWS_SYNC","AZURE_RECOMMENDATIONS","AZURE_ALERTS","AZURE_SYNC","GCP_FINDINGS","GCP_SOURCES","GCP_SYNC","REMEDIATE_FINDING","EXPORT_REPORT","REAL_TIME_MONITORING","REAL_TIME_ALERTS","COST_ANALYSIS","COST_OPTIMIZATION","SUBSCRIBE_UPDATES","ENHANCED_CLOUD_SECURITY","COMPLIANCE","GOVERNANCE","COST_MANAGEMENT","NETWORK_SECURITY","FIREWALLS","INTRUSION_DETECTION","VULNERABILITY_SCANS","PENETRATION_TESTS","NETWORK_MONITORING","TRAFFIC_ANALYSIS","THREAT_DETECTION","INCIDENT_RESPONSE","ENDPOINT_SECURITY","POLICIES","INCIDENTS","ENDPOINT_ANTIVIRUS_EDR","QUARANTINE","DEVICE_CONTROL","DEVICES","DATA_SECURITY","CLASSIFICATION","ENCRYPTION","ACCESS_CONTROL","DATA_PROTECTION","BACKUP","ARCHIVING","SIEM_SOAR","PLAYBOOKS","MONITORING_SIEM_SOAR","DASHBOARDS","ANALYTICS","INSIGHTS","THREAT_INTELLIGENCE","INDICATORS","FEEDS","FRAMEWORKS","ASSESSMENTS","AUDITS","REMEDIATION","QUALITY_GOALS","GOALS","WORKFLOWS","TEMPLATES","EXECUTIONS","INCIDENT","RESPONSE","PHISHING","DETECTIONS","TRAINING","CICD","PIPELINES","DEPLOYMENTS","SECURITY_SCANS","CONFIGURATIONS","WEBHOOKS","MEMBERS","REPORT","GENERATE","EXPORT","SCHEDULE","HEALTH","STATUS","DETAILS","WEBSOCKET","CONNECT","SUBSCRIBE","UNSUBSCRIBE","SERVICE_MAPPING","IntegrationService","constructor","integrationStatus","Map","checkAllEndpoints","statusChecks","Object","entries","map","service","endpoints","serviceEndpoints","values","filter","endpoint","includes","startTime","Date","now","response","get","responseTime","set","status","lastCheck","error","message","Promise","all","getServiceStatus","Array","from","getOverallHealth","total","size","healthy","length","percentage","Math","round","getServiceEndpoints","getFrontendService","backendService","testEndpoint","success","getServicesNeedingAttention","exportStatusReport","health","servicesNeedingAttention","report","toISOString","forEach","integrationService"],"sources":["D:/curser/copy-of-git-10-082025/cyber-cursor/frontend/src/services/integrationService.ts"],"sourcesContent":["import { apiClient, apiCallWithRetry } from '../utils/apiClient';\r\n\r\n// Comprehensive endpoint mapping for all backend services\r\nexport const API_ENDPOINTS = {\r\n  // Authentication & User Management\r\n  AUTH: {\r\n    LOGIN: '/auth/login',\r\n    REGISTER: '/auth/register',\r\n    REFRESH: '/auth/refresh',\r\n    LOGOUT: '/auth/logout',\r\n    ME: '/auth/me',\r\n    CHANGE_PASSWORD: '/auth/change-password',\r\n    FORGOT_PASSWORD: '/auth/forgot-password',\r\n    RESET_PASSWORD: '/auth/reset-password',\r\n    LOGOUT_ALL: '/auth/logout-all'\r\n  },\r\n  USERS: {\r\n    LIST: '/users',\r\n    CREATE: '/users',\r\n    GET: (id: string) => `/users/${id}`,\r\n    UPDATE: (id: string) => `/users/${id}`,\r\n    DELETE: (id: string) => `/users/${id}`,\r\n    BULK_UPDATE: '/users/bulk-update',\r\n    BULK_DELETE: '/users/bulk-delete'\r\n  },\r\n  MFA: {\r\n    SETUP: '/mfa/setup',\r\n    VERIFY: '/mfa/verify',\r\n    DISABLE: '/mfa/disable',\r\n    BACKUP_CODES: '/mfa/backup-codes',\r\n    RECOVERY: '/mfa/recovery'\r\n  },\r\n  ADMIN: {\r\n    DASHBOARD: '/admin/dashboard',\r\n    USERS: '/admin/users',\r\n    SYSTEM_STATUS: '/admin/system-status',\r\n    AUDIT_LOGS: '/admin/audit-logs',\r\n    SETTINGS: '/admin/settings'\r\n  },\r\n\r\n  // Security Testing\r\n  SAST: {\r\n    DASHBOARD: '/sast/dashboard',\r\n    OVERVIEW: '/sast/overview',\r\n    PROJECTS: '/sast/projects',\r\n    PROJECT: (id: string) => `/sast/projects/${id}`,\r\n    SCANS: '/sast/scans',\r\n    SCAN: (id: string) => `/sast/scans/${id}`,\r\n    VULNERABILITIES: '/sast/vulnerabilities',\r\n    SECURITY_HOTSPOTS: '/sast/security-hotspots',\r\n    QUALITY_GATES: '/sast/quality-gates',\r\n    CODE_COVERAGE: '/sast/code-coverage',\r\n    DUPLICATIONS: '/sast/duplications',\r\n    STATISTICS: '/sast/statistics',\r\n    RULES: '/sast/rules',\r\n    LANGUAGES: '/sast/languages',\r\n    CONFIGURATION: (id: string) => `/sast/projects/${id}/configuration`,\r\n    METRICS: (id: string) => `/sast/projects/${id}/metrics`,\r\n    TRENDS: (id: string) => `/sast/projects/${id}/trends`,\r\n    SECURITY_REPORTS: (id: string) => `/sast/projects/${id}/security-reports`,\r\n    RELIABILITY: (id: string) => `/sast/projects/${id}/reliability`,\r\n    MAINTAINABILITY: (id: string) => `/sast/projects/${id}/maintainability`,\r\n    ACTIVITY: (id: string) => `/sast/projects/${id}/activity`\r\n  },\r\n  DAST: {\r\n    OVERVIEW: '/dast/overview',\r\n    PROJECTS: '/dast/projects',\r\n    PROJECT: (id: string) => `/dast/projects/${id}`,\r\n    SCANS: '/dast/scans',\r\n    SCAN: (id: string) => `/dast/scans/${id}`,\r\n    VULNERABILITIES: '/dast/vulnerabilities',\r\n    PAYLOADS: '/dast/payloads',\r\n    REPORTS: (id: string) => `/dast/reports/${id}`,\r\n    WEBHOOK: '/dast/webhook'\r\n  },\r\n  RASP: {\r\n    AGENTS: '/rasp/agents',\r\n    AGENT: (id: string) => `/rasp/agents/${id}`,\r\n    ATTACKS: '/rasp/attacks',\r\n    ATTACK: (id: string) => `/rasp/attacks/${id}`,\r\n    RULES: '/rasp/rules',\r\n    RULE: (id: string) => `/rasp/rules/${id}`,\r\n    VULNERABILITIES: '/rasp/vulnerabilities',\r\n    VULNERABILITY: (id: string) => `/rasp/vulnerabilities/${id}`,\r\n    VIRTUAL_PATCHES: '/rasp/virtual-patches',\r\n    ALERTS: '/rasp/alerts',\r\n    ALERT: (id: string) => `/rasp/alerts/${id}`,\r\n    INTEGRATIONS: '/rasp/integrations',\r\n    DASHBOARD_OVERVIEW: '/rasp/dashboard/overview',\r\n    ATTACK_SUMMARY: '/rasp/dashboard/attack-summary',\r\n    AGENT_STATUS: '/rasp/dashboard/agent-status',\r\n    HEARTBEAT: (id: string) => `/rasp/agents/${id}/heartbeat`,\r\n    WEBHOOK: '/rasp/webhook'\r\n  },\r\n  APPLICATION_SECURITY: {\r\n    OVERVIEW: '/application-security/overview',\r\n    VULNERABILITIES: '/application-security/vulnerabilities',\r\n    SCANS: '/application-security/scans',\r\n    REPORTS: '/application-security/reports',\r\n    CONFIGURATION: '/application-security/configuration'\r\n  },\r\n\r\n  // Cloud Security\r\n  CLOUD_SECURITY: {\r\n    CONFIGS: '/cloud-security/configs',\r\n    CONFIG: (id: string) => `/cloud-security/configs/${id}`,\r\n    SCANS: '/cloud-security/scans',\r\n    SCAN: (id: string) => `/cloud-security/scans/${id}`,\r\n    FINDINGS: '/cloud-security/findings',\r\n    FINDING: (id: string) => `/cloud-security/findings/${id}`,\r\n    COMPLIANCE_CHECKS: '/cloud-security/compliance-checks',\r\n    COMPLIANCE_CHECK: (id: string) => `/cloud-security/compliance-checks/${id}`,\r\n    ASSETS: (id: string) => `/cloud-security/accounts/${id}/assets`,\r\n    ASSET: (id: string) => `/cloud-security/accounts/${id}/assets`,\r\n    MISCONFIGURATIONS: '/cloud-security/misconfigurations',\r\n    SAAS_APPLICATIONS: '/cloud-security/saas-applications',\r\n    USER_ACTIVITIES: '/cloud-security/user-activities',\r\n    DLP_INCIDENTS: '/cloud-security/dlp-incidents',\r\n    THREATS: '/cloud-security/threats',\r\n    IAM_RISKS: '/cloud-security/iam-risks',\r\n    DDOS_PROTECTION: '/cloud-security/ddos-protection',\r\n    DASHBOARD: '/cloud-security/dashboard',\r\n    METRICS: '/cloud-security/metrics',\r\n    STATS: '/cloud-security/stats',\r\n    ACTIVITY: '/cloud-security/activity',\r\n    SCAN_INITIATE: '/cloud-security/scan/initiate',\r\n    REMEDIATE: '/cloud-security/remediate',\r\n    AWS_FINDINGS: (id: string) => `/cloud-security/aws/${id}/findings`,\r\n    AWS_INSIGHTS: (id: string) => `/cloud-security/aws/${id}/insights`,\r\n    AWS_SYNC: (id: string) => `/cloud-security/aws/${id}/sync`,\r\n    AZURE_RECOMMENDATIONS: (id: string) => `/cloud-security/azure/${id}/recommendations`,\r\n    AZURE_ALERTS: (id: string) => `/cloud-security/azure/${id}/alerts`,\r\n    AZURE_SYNC: (id: string) => `/cloud-security/azure/${id}/sync`,\r\n    GCP_FINDINGS: (id: string) => `/cloud-security/gcp/${id}/findings`,\r\n    GCP_SOURCES: (id: string) => `/cloud-security/gcp/${id}/sources`,\r\n    GCP_SYNC: (id: string) => `/cloud-security/gcp/${id}/sync`,\r\n    REMEDIATE_FINDING: (id: string) => `/cloud-security/findings/${id}/remediate`,\r\n    BULK_UPDATE: '/cloud-security/findings/bulk-update',\r\n    EXPORT_REPORT: '/cloud-security/reports/export',\r\n    REAL_TIME_MONITORING: (id: string) => `/cloud-security/configs/${id}/monitoring`,\r\n    REAL_TIME_ALERTS: (id: string) => `/cloud-security/configs/${id}/alerts`,\r\n    COST_ANALYSIS: (id: string) => `/cloud-security/accounts/${id}/cost-analysis`,\r\n    COST_OPTIMIZATION: (id: string) => `/cloud-security/accounts/${id}/cost-optimization`,\r\n    SUBSCRIBE_UPDATES: (id: string) => `/cloud-security/accounts/${id}/subscribe`\r\n  },\r\n  ENHANCED_CLOUD_SECURITY: {\r\n    OVERVIEW: '/enhanced-cloud-security/overview',\r\n    THREATS: '/enhanced-cloud-security/threats',\r\n    COMPLIANCE: '/enhanced-cloud-security/compliance',\r\n    GOVERNANCE: '/enhanced-cloud-security/governance',\r\n    COST_MANAGEMENT: '/enhanced-cloud-security/cost-management'\r\n  },\r\n\r\n  // Network & Endpoint Security\r\n  NETWORK_SECURITY: {\r\n    OVERVIEW: '/network-security/overview',\r\n    FIREWALLS: '/network-security/firewalls',\r\n    INTRUSION_DETECTION: '/network-security/intrusion-detection',\r\n    VULNERABILITY_SCANS: '/network-security/vulnerability-scans',\r\n    PENETRATION_TESTS: '/network-security/penetration-tests',\r\n    NETWORK_MONITORING: '/network-security/monitoring',\r\n    TRAFFIC_ANALYSIS: '/network-security/traffic-analysis',\r\n    THREAT_DETECTION: '/network-security/threat-detection',\r\n    INCIDENT_RESPONSE: '/network-security/incident-response'\r\n  },\r\n  ENDPOINT_SECURITY: {\r\n    OVERVIEW: '/endpoint-security/overview',\r\n    AGENTS: '/endpoint-security/agents',\r\n    THREATS: '/endpoint-security/threats',\r\n    POLICIES: '/endpoint-security/policies',\r\n    COMPLIANCE: '/endpoint-security/compliance',\r\n    INCIDENTS: '/endpoint-security/incidents'\r\n  },\r\n  ENDPOINT_ANTIVIRUS_EDR: {\r\n    OVERVIEW: '/endpoint-antivirus-edr/overview',\r\n    SCANS: '/endpoint-antivirus-edr/scans',\r\n    THREATS: '/endpoint-antivirus-edr/threats',\r\n    QUARANTINE: '/endpoint-antivirus-edr/quarantine',\r\n    POLICIES: '/endpoint-antivirus-edr/policies',\r\n    REPORTS: '/endpoint-antivirus-edr/reports'\r\n  },\r\n  DEVICE_CONTROL: {\r\n    OVERVIEW: '/device-control/overview',\r\n    DEVICES: '/device-control/devices',\r\n    POLICIES: '/device-control/policies',\r\n    COMPLIANCE: '/device-control/compliance',\r\n    REPORTS: '/device-control/reports'\r\n  },\r\n\r\n  // Data Security\r\n  DATA_SECURITY: {\r\n    OVERVIEW: '/data-security/overview',\r\n    CLASSIFICATION: '/data-security/classification',\r\n    ENCRYPTION: '/data-security/encryption',\r\n    ACCESS_CONTROL: '/data-security/access-control',\r\n    AUDIT_LOGS: '/data-security/audit-logs',\r\n    COMPLIANCE: '/data-security/compliance',\r\n    INCIDENTS: '/data-security/incidents'\r\n  },\r\n  DATA_PROTECTION: {\r\n    OVERVIEW: '/data-protection/overview',\r\n    BACKUP: '/data-protection/backup',\r\n    RECOVERY: '/data-protection/recovery',\r\n    ARCHIVING: '/data-protection/archiving',\r\n    COMPLIANCE: '/data-protection/compliance',\r\n    REPORTS: '/data-protection/reports'\r\n  },\r\n\r\n  // Monitoring & Analytics\r\n  SIEM_SOAR: {\r\n    OVERVIEW: '/siem-soar/overview',\r\n    ALERTS: '/siem-soar/alerts',\r\n    INCIDENTS: '/siem-soar/incidents',\r\n    PLAYBOOKS: '/siem-soar/playbooks',\r\n    INTEGRATIONS: '/siem-soar/integrations',\r\n    REPORTS: '/siem-soar/reports'\r\n  },\r\n  MONITORING_SIEM_SOAR: {\r\n    OVERVIEW: '/monitoring-siem-soar/overview',\r\n    DASHBOARDS: '/monitoring-siem-soar/dashboards',\r\n    ALERTS: '/monitoring-siem-soar/alerts',\r\n    METRICS: '/monitoring-siem-soar/metrics',\r\n    REPORTS: '/monitoring-siem-soar/reports'\r\n  },\r\n  ANALYTICS: {\r\n    OVERVIEW: '/analytics/overview',\r\n    DASHBOARDS: '/analytics/dashboards',\r\n    REPORTS: '/analytics/reports',\r\n    METRICS: '/analytics/metrics',\r\n    TRENDS: '/analytics/trends',\r\n    INSIGHTS: '/analytics/insights'\r\n  },\r\n  THREAT_INTELLIGENCE: {\r\n    OVERVIEW: '/threat-intelligence/overview',\r\n    THREATS: '/threat-intelligence/threats',\r\n    INDICATORS: '/threat-intelligence/indicators',\r\n    FEEDS: '/threat-intelligence/feeds',\r\n    REPORTS: '/threat-intelligence/reports',\r\n    INTEGRATIONS: '/threat-intelligence/integrations'\r\n  },\r\n\r\n  // Compliance & Governance\r\n  COMPLIANCE: {\r\n    OVERVIEW: '/compliance/overview',\r\n    FRAMEWORKS: '/compliance/frameworks',\r\n    ASSESSMENTS: '/compliance/assessments',\r\n    REPORTS: '/compliance/reports',\r\n    AUDITS: '/compliance/audits',\r\n    REMEDIATION: '/compliance/remediation'\r\n  },\r\n  QUALITY_GOALS: {\r\n    OVERVIEW: '/quality-goals/overview',\r\n    GOALS: '/quality-goals/goals',\r\n    METRICS: '/quality-goals/metrics',\r\n    REPORTS: '/quality-goals/reports',\r\n    DASHBOARDS: '/quality-goals/dashboards'\r\n  },\r\n  WORKFLOWS: {\r\n    OVERVIEW: '/workflows/overview',\r\n    WORKFLOWS: '/workflows/workflows',\r\n    TEMPLATES: '/workflows/templates',\r\n    EXECUTIONS: '/workflows/executions',\r\n    REPORTS: '/workflows/reports'\r\n  },\r\n\r\n  // Incident Management\r\n  INCIDENTS: {\r\n    OVERVIEW: '/incidents/overview',\r\n    INCIDENTS: '/incidents/incidents',\r\n    INCIDENT: (id: string) => `/incidents/incidents/${id}`,\r\n    RESPONSE: '/incidents/response',\r\n    REPORTS: '/incidents/reports',\r\n    METRICS: '/incidents/metrics'\r\n  },\r\n  PHISHING: {\r\n    OVERVIEW: '/phishing/overview',\r\n    DETECTIONS: '/phishing/detections',\r\n    REPORTS: '/phishing/reports',\r\n    TRAINING: '/phishing/training',\r\n    METRICS: '/phishing/metrics'\r\n  },\r\n\r\n  // CI/CD & DevOps\r\n  CICD: {\r\n    OVERVIEW: '/cicd/overview',\r\n    PIPELINES: '/cicd/pipelines',\r\n    DEPLOYMENTS: '/cicd/deployments',\r\n    SECURITY_SCANS: '/cicd/security-scans',\r\n    COMPLIANCE_CHECKS: '/cicd/compliance-checks',\r\n    REPORTS: '/cicd/reports'\r\n  },\r\n  INTEGRATIONS: {\r\n    OVERVIEW: '/integrations/overview',\r\n    INTEGRATIONS: '/integrations/integrations',\r\n    CONFIGURATIONS: '/integrations/configurations',\r\n    WEBHOOKS: '/integrations/webhooks',\r\n    REPORTS: '/integrations/reports'\r\n  },\r\n\r\n  // Other Services\r\n  DASHBOARD: {\r\n    OVERVIEW: '/dashboard/overview',\r\n    STATS: '/dashboard/stats',\r\n    METRICS: '/dashboard/metrics',\r\n    REPORTS: '/dashboard/reports'\r\n  },\r\n  PROJECTS: {\r\n    OVERVIEW: '/projects/overview',\r\n    PROJECTS: '/projects/projects',\r\n    PROJECT: (id: string) => `/projects/projects/${id}`,\r\n    MEMBERS: (id: string) => `/projects/projects/${id}/members`,\r\n    SETTINGS: (id: string) => `/projects/projects/${id}/settings`,\r\n    REPORTS: (id: string) => `/projects/projects/${id}/reports`\r\n  },\r\n  REPORTS: {\r\n    OVERVIEW: '/reports/overview',\r\n    REPORTS: '/reports/reports',\r\n    REPORT: (id: string) => `/reports/reports/${id}`,\r\n    GENERATE: '/reports/generate',\r\n    EXPORT: '/reports/export',\r\n    SCHEDULE: '/reports/schedule'\r\n  },\r\n  HEALTH: {\r\n    STATUS: '/health/status',\r\n    DETAILS: '/health/details',\r\n    METRICS: '/health/metrics'\r\n  },\r\n  WEBSOCKET: {\r\n    CONNECT: '/ws/connect',\r\n    SUBSCRIBE: '/ws/subscribe',\r\n    UNSUBSCRIBE: '/ws/unsubscribe'\r\n  }\r\n};\r\n\r\n// Service mapping for frontend components\r\nexport const SERVICE_MAPPING = {\r\n  // Core Services\r\n  AUTH: 'authService',\r\n  USERS: 'userService',\r\n  MFA: 'mfaService',\r\n  ADMIN: 'adminService',\r\n  \r\n  // Security Testing Services\r\n  SAST: 'sastService',\r\n  DAST: 'dastService',\r\n  RASP: 'raspService',\r\n  APPLICATION_SECURITY: 'applicationSecurityService',\r\n  \r\n  // Cloud Security Services\r\n  CLOUD_SECURITY: 'cloudSecurityService',\r\n  ENHANCED_CLOUD_SECURITY: 'enhancedCloudSecurityService',\r\n  \r\n  // Network & Endpoint Services\r\n  NETWORK_SECURITY: 'networkSecurityService',\r\n  ENDPOINT_SECURITY: 'endpointSecurityService',\r\n  ENDPOINT_ANTIVIRUS_EDR: 'endpointAntivirusEdrService',\r\n  DEVICE_CONTROL: 'deviceControlService',\r\n  \r\n  // Data Security Services\r\n  DATA_SECURITY: 'dataSecurityService',\r\n  DATA_PROTECTION: 'dataProtectionService',\r\n  \r\n  // Monitoring Services\r\n  SIEM_SOAR: 'siemSoarService',\r\n  MONITORING_SIEM_SOAR: 'monitoringSiemSoarService',\r\n  ANALYTICS: 'analyticsService',\r\n  THREAT_INTELLIGENCE: 'threatIntelligenceService',\r\n  \r\n  // Compliance Services\r\n  COMPLIANCE: 'complianceService',\r\n  QUALITY_GOALS: 'qualityGoalsService',\r\n  WORKFLOWS: 'workflowsService',\r\n  \r\n  // Incident Management Services\r\n  INCIDENTS: 'incidentService',\r\n  PHISHING: 'phishingService',\r\n  \r\n  // DevOps Services\r\n  CICD: 'cicdService',\r\n  INTEGRATIONS: 'integrationsService',\r\n  \r\n  // Other Services\r\n  DASHBOARD: 'dashboardService',\r\n  PROJECTS: 'projectsService',\r\n  REPORTS: 'reportsService',\r\n  HEALTH: 'healthService',\r\n  WEBSOCKET: 'websocketService'\r\n};\r\n\r\n// Integration status tracking\r\nexport interface IntegrationStatus {\r\n  service: string;\r\n  status: 'connected' | 'disconnected' | 'error' | 'unknown';\r\n  lastCheck: Date;\r\n  endpoint: string;\r\n  responseTime?: number;\r\n  error?: string;\r\n}\r\n\r\n// Main integration service class\r\nclass IntegrationService {\r\n  private integrationStatus: Map<string, IntegrationStatus> = new Map();\r\n\r\n  /**\r\n   * Check the health of all backend endpoints\r\n   */\r\n  async checkAllEndpoints(): Promise<Map<string, IntegrationStatus>> {\r\n    const statusChecks = Object.entries(API_ENDPOINTS).map(async ([service, endpoints]) => {\r\n      const serviceEndpoints = Object.values(endpoints).filter(endpoint => \r\n        typeof endpoint === 'string' && !endpoint.includes('{')\r\n      );\r\n      \r\n      for (const endpoint of serviceEndpoints) {\r\n        // Skip function endpoints, only process string endpoints\r\n        if (typeof endpoint !== 'string') continue;\r\n        \r\n        try {\r\n          const startTime = Date.now();\r\n          const response = await apiCallWithRetry(() => \r\n            apiClient.get(endpoint)\r\n          );\r\n          const responseTime = Date.now() - startTime;\r\n          \r\n          this.integrationStatus.set(`${service}_${endpoint}`, {\r\n            service,\r\n            status: 'connected',\r\n            lastCheck: new Date(),\r\n            endpoint,\r\n            responseTime\r\n          });\r\n        } catch (error: any) {\r\n          this.integrationStatus.set(`${service}_${endpoint}`, {\r\n            service,\r\n            status: 'error',\r\n            lastCheck: new Date(),\r\n            endpoint,\r\n            error: error.message\r\n          });\r\n        }\r\n      }\r\n    });\r\n\r\n    await Promise.all(statusChecks);\r\n    return this.integrationStatus;\r\n  }\r\n\r\n  /**\r\n   * Get integration status for a specific service\r\n   */\r\n  getServiceStatus(service: string): IntegrationStatus[] {\r\n    return Array.from(this.integrationStatus.values())\r\n      .filter(status => status.service === service);\r\n  }\r\n\r\n  /**\r\n   * Get overall integration health\r\n   */\r\n  getOverallHealth(): { healthy: number; total: number; percentage: number } {\r\n    const total = this.integrationStatus.size;\r\n    const healthy = Array.from(this.integrationStatus.values())\r\n      .filter(status => status.status === 'connected').length;\r\n    \r\n    return {\r\n      healthy,\r\n      total,\r\n      percentage: total > 0 ? Math.round((healthy / total) * 100) : 0\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Get all available endpoints for a service\r\n   */\r\n  getServiceEndpoints(service: string): Record<string, string | ((id: string) => string)> {\r\n    return API_ENDPOINTS[service as keyof typeof API_ENDPOINTS] || {};\r\n  }\r\n\r\n  /**\r\n   * Get the corresponding frontend service name\r\n   */\r\n  getFrontendService(backendService: string): string {\r\n    return SERVICE_MAPPING[backendService as keyof typeof SERVICE_MAPPING] || 'unknown';\r\n  }\r\n\r\n  /**\r\n   * Test a specific endpoint\r\n   */\r\n  async testEndpoint(endpoint: string): Promise<{ success: boolean; responseTime: number; error?: string }> {\r\n    try {\r\n      const startTime = Date.now();\r\n      await apiCallWithRetry(() => apiClient.get(endpoint));\r\n      const responseTime = Date.now() - startTime;\r\n      \r\n      return { success: true, responseTime };\r\n    } catch (error: any) {\r\n      return { success: false, responseTime: 0, error: error.message };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get all services that need attention (errors or disconnections)\r\n   */\r\n  getServicesNeedingAttention(): IntegrationStatus[] {\r\n    return Array.from(this.integrationStatus.values())\r\n      .filter(status => status.status !== 'connected');\r\n  }\r\n\r\n  /**\r\n   * Export integration status report\r\n   */\r\n  exportStatusReport(): string {\r\n    const health = this.getOverallHealth();\r\n    const servicesNeedingAttention = this.getServicesNeedingAttention();\r\n    \r\n    let report = `Integration Status Report - ${new Date().toISOString()}\\n`;\r\n    report += `Overall Health: ${health.percentage}% (${health.healthy}/${health.total})\\n\\n`;\r\n    \r\n    if (servicesNeedingAttention.length > 0) {\r\n      report += `Services Needing Attention:\\n`;\r\n      servicesNeedingAttention.forEach(status => {\r\n        report += `- ${status.service}: ${status.status} - ${status.error || 'Unknown error'}\\n`;\r\n      });\r\n    } else {\r\n      report += `All services are healthy!\\n`;\r\n    }\r\n    \r\n    return report;\r\n  }\r\n}\r\n\r\n// Export singleton instance\r\nexport const integrationService = new IntegrationService();\r\nexport default IntegrationService;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}