{"ast":null,"code":"import axios from'axios';// Create axios instance with default configuration\nconst apiClient=axios.create({baseURL:process.env.REACT_APP_API_URL||'http://localhost:8000',timeout:30000,// Increased timeout for complex operations\nheaders:{'Content-Type':'application/json'}});// Request interceptor to add auth token\napiClient.interceptors.request.use(config=>{const token=localStorage.getItem('authToken');if(token){config.headers.Authorization=\"Bearer \".concat(token);}return config;},error=>{return Promise.reject(error);});// Response interceptor to handle errors\napiClient.interceptors.response.use(response=>{return response;},async error=>{var _error$response,_error$response2,_error$response3,_error$response4;const originalRequest=error.config;if(((_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.status)===401&&originalRequest){// Handle unauthorized access\nconst refreshToken=localStorage.getItem('refreshToken');if(refreshToken){try{// Try to refresh the token\nconst response=await axios.post('/auth/refresh',{refresh_token:refreshToken});const{access_token}=response.data;localStorage.setItem('authToken',access_token);// Retry the original request\noriginalRequest.headers.Authorization=\"Bearer \".concat(access_token);return apiClient(originalRequest);}catch(refreshError){// Refresh failed, redirect to login\nlocalStorage.removeItem('authToken');localStorage.removeItem('refreshToken');window.location.href='/login';}}else{// No refresh token, redirect to login\nlocalStorage.removeItem('authToken');window.location.href='/login';}}// Handle other errors\nif(((_error$response2=error.response)===null||_error$response2===void 0?void 0:_error$response2.status)===403){console.error('Access forbidden');}else if(((_error$response3=error.response)===null||_error$response3===void 0?void 0:_error$response3.status)===404){console.error('Resource not found');}else if(((_error$response4=error.response)===null||_error$response4===void 0?void 0:_error$response4.status)===500){console.error('Internal server error');}return Promise.reject(error);});// Helper function for API calls with retry logic\nexport const apiCallWithRetry=async function(apiCall){let maxRetries=arguments.length>1&&arguments[1]!==undefined?arguments[1]:3;let delay=arguments.length>2&&arguments[2]!==undefined?arguments[2]:1000;let lastError;for(let attempt=1;attempt<=maxRetries;attempt++){try{return await apiCall();}catch(error){var _error$response5,_error$response6;lastError=error;// Don't retry on client errors (4xx)\nif(((_error$response5=error.response)===null||_error$response5===void 0?void 0:_error$response5.status)>=400&&((_error$response6=error.response)===null||_error$response6===void 0?void 0:_error$response6.status)<500){throw error;}if(attempt<maxRetries){await new Promise(resolve=>setTimeout(resolve,delay*attempt));}}}throw lastError;};export{apiClient};","map":{"version":3,"names":["axios","apiClient","create","baseURL","process","env","REACT_APP_API_URL","timeout","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","concat","error","Promise","reject","response","_error$response","_error$response2","_error$response3","_error$response4","originalRequest","status","refreshToken","post","refresh_token","access_token","data","setItem","refreshError","removeItem","window","location","href","console","apiCallWithRetry","apiCall","maxRetries","arguments","length","undefined","delay","lastError","attempt","_error$response5","_error$response6","resolve","setTimeout"],"sources":["D:/curser/copy-of-git-10-082025/cyber-cursor/frontend/src/utils/apiClient.ts"],"sourcesContent":["import axios, { AxiosError, AxiosResponse } from 'axios';\r\n\r\n// Create axios instance with default configuration\r\nconst apiClient = axios.create({\r\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:8000',\r\n  timeout: 30000, // Increased timeout for complex operations\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Request interceptor to add auth token\r\napiClient.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem('authToken');\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Response interceptor to handle errors\r\napiClient.interceptors.response.use(\r\n  (response: AxiosResponse) => {\r\n    return response;\r\n  },\r\n  async (error: AxiosError) => {\r\n    const originalRequest = error.config;\r\n    \r\n    if (error.response?.status === 401 && originalRequest) {\r\n      // Handle unauthorized access\r\n      const refreshToken = localStorage.getItem('refreshToken');\r\n      \r\n      if (refreshToken) {\r\n        try {\r\n          // Try to refresh the token\r\n          const response = await axios.post('/auth/refresh', {\r\n            refresh_token: refreshToken\r\n          });\r\n          \r\n          const { access_token } = response.data;\r\n          localStorage.setItem('authToken', access_token);\r\n          \r\n          // Retry the original request\r\n          originalRequest.headers.Authorization = `Bearer ${access_token}`;\r\n          return apiClient(originalRequest);\r\n        } catch (refreshError) {\r\n          // Refresh failed, redirect to login\r\n          localStorage.removeItem('authToken');\r\n          localStorage.removeItem('refreshToken');\r\n          window.location.href = '/login';\r\n        }\r\n      } else {\r\n        // No refresh token, redirect to login\r\n        localStorage.removeItem('authToken');\r\n        window.location.href = '/login';\r\n      }\r\n    }\r\n    \r\n    // Handle other errors\r\n    if (error.response?.status === 403) {\r\n      console.error('Access forbidden');\r\n    } else if (error.response?.status === 404) {\r\n      console.error('Resource not found');\r\n    } else if (error.response?.status === 500) {\r\n      console.error('Internal server error');\r\n    }\r\n    \r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Helper function for API calls with retry logic\r\nexport const apiCallWithRetry = async <T>(\r\n  apiCall: () => Promise<T>,\r\n  maxRetries: number = 3,\r\n  delay: number = 1000\r\n): Promise<T> => {\r\n  let lastError: any;\r\n  \r\n  for (let attempt = 1; attempt <= maxRetries; attempt++) {\r\n    try {\r\n      return await apiCall();\r\n    } catch (error: any) {\r\n      lastError = error;\r\n      \r\n      // Don't retry on client errors (4xx)\r\n      if (error.response?.status >= 400 && error.response?.status < 500) {\r\n        throw error;\r\n      }\r\n      \r\n      if (attempt < maxRetries) {\r\n        await new Promise(resolve => setTimeout(resolve, delay * attempt));\r\n      }\r\n    }\r\n  }\r\n  \r\n  throw lastError;\r\n};\r\n\r\nexport { apiClient }; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}