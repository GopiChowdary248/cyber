{"ast":null,"code":"var _jsxFileName = \"D:\\\\curser\\\\copy-of-git-10-082025\\\\cyber-cursor\\\\frontend\\\\src\\\\contexts\\\\AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(undefined);\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const navigate = useNavigate();\n\n  // Demo mode - no backend required\n  const login = async (email, password) => {\n    try {\n      setLoading(true);\n      setError(null);\n\n      // Simulate API delay\n      await new Promise(resolve => setTimeout(resolve, 1000));\n\n      // Demo user data based on email\n      let demoUser;\n      if (email === 'admin@cybershield.com') {\n        demoUser = {\n          id: 1,\n          email: 'admin@cybershield.com',\n          username: 'admin',\n          full_name: 'Administrator',\n          role: 'admin',\n          is_active: true,\n          created_at: new Date().toISOString()\n        };\n      } else if (email === 'analyst@cybershield.com') {\n        demoUser = {\n          id: 2,\n          email: 'analyst@cybershield.com',\n          username: 'analyst',\n          full_name: 'Security Analyst',\n          role: 'analyst',\n          is_active: true,\n          created_at: new Date().toISOString()\n        };\n      } else if (email === 'user@cybershield.com') {\n        demoUser = {\n          id: 3,\n          email: 'user@cybershield.com',\n          username: 'user',\n          full_name: 'Regular User',\n          role: 'user',\n          is_active: true,\n          created_at: new Date().toISOString()\n        };\n      } else {\n        // Any other email with password 'password' will work\n        demoUser = {\n          id: 4,\n          email: email,\n          username: email.split('@')[0],\n          full_name: 'Demo User',\n          role: 'user',\n          is_active: true,\n          created_at: new Date().toISOString()\n        };\n      }\n\n      // Store user in localStorage for demo\n      localStorage.setItem('demo_user', JSON.stringify(demoUser));\n      localStorage.setItem('demo_authenticated', 'true');\n      setUser(demoUser);\n      navigate('/dashboard');\n    } catch (error) {\n      console.error('Login failed:', error);\n      setError('Login failed. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('demo_user');\n    localStorage.removeItem('demo_authenticated');\n    setUser(null);\n    navigate('/login');\n  };\n  const register = async userData => {\n    try {\n      setLoading(true);\n      setError(null);\n\n      // Simulate API delay\n      await new Promise(resolve => setTimeout(resolve, 1000));\n\n      // Demo registration - just log in the user\n      await login(userData.email, userData.password);\n    } catch (error) {\n      console.error('Registration failed:', error);\n      setError('Registration failed. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const updateProfile = async data => {\n    try {\n      setLoading(true);\n      setError(null);\n\n      // Simulate API delay\n      await new Promise(resolve => setTimeout(resolve, 1000));\n      if (user) {\n        const updatedUser = {\n          ...user,\n          ...data\n        };\n        setUser(updatedUser);\n        localStorage.setItem('demo_user', JSON.stringify(updatedUser));\n      }\n    } catch (error) {\n      console.error('Profile update failed:', error);\n      setError('Profile update failed. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Check if user is already authenticated on app load\n  useEffect(() => {\n    const demoUser = localStorage.getItem('demo_user');\n    const isDemoAuthenticated = localStorage.getItem('demo_authenticated');\n    if (demoUser && isDemoAuthenticated === 'true') {\n      try {\n        const userData = JSON.parse(demoUser);\n        setUser(userData);\n      } catch (error) {\n        console.error('Error parsing demo user data:', error);\n        localStorage.removeItem('demo_user');\n        localStorage.removeItem('demo_authenticated');\n      }\n    }\n    setLoading(false);\n  }, []);\n  const value = {\n    user,\n    isAuthenticated: !!user,\n    loading,\n    login,\n    logout,\n    register,\n    updateProfile\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 200,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"OehEcY2uC6SeZYRr5JsGBhoFpf8=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","useNavigate","jsxDEV","_jsxDEV","AuthContext","undefined","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","loading","setLoading","error","setError","navigate","login","email","password","Promise","resolve","setTimeout","demoUser","id","username","full_name","role","is_active","created_at","Date","toISOString","split","localStorage","setItem","JSON","stringify","console","logout","removeItem","register","userData","updateProfile","data","updatedUser","getItem","isDemoAuthenticated","parse","value","isAuthenticated","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/curser/copy-of-git-10-082025/cyber-cursor/frontend/src/contexts/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect, ReactNode, useCallback } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\ninterface User {\r\n  id: number;\r\n  email: string;\r\n  username: string;\r\n  full_name?: string;\r\n  role: string;\r\n  is_active: boolean;\r\n  created_at: string;\r\n}\r\n\r\ninterface AuthContextType {\r\n  user: User | null;\r\n  isAuthenticated: boolean;\r\n  loading: boolean;\r\n  login: (email: string, password: string) => Promise<void>;\r\n  logout: () => void;\r\n  register: (userData: RegisterData) => Promise<void>;\r\n  updateProfile: (data: Partial<User>) => Promise<void>;\r\n}\r\n\r\ninterface RegisterData {\r\n  email: string;\r\n  username: string;\r\n  password: string;\r\n  confirm_password: string;\r\n  full_name?: string;\r\n}\r\n\r\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (context === undefined) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\ninterface AuthProviderProps {\r\n  children: ReactNode;\r\n}\r\n\r\nexport const AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {\r\n  const [user, setUser] = useState<User | null>(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const navigate = useNavigate();\r\n\r\n  // Demo mode - no backend required\r\n  const login = async (email: string, password: string) => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      \r\n      // Simulate API delay\r\n      await new Promise(resolve => setTimeout(resolve, 1000));\r\n      \r\n      // Demo user data based on email\r\n      let demoUser: User;\r\n      \r\n      if (email === 'admin@cybershield.com') {\r\n        demoUser = {\r\n          id: 1,\r\n          email: 'admin@cybershield.com',\r\n          username: 'admin',\r\n          full_name: 'Administrator',\r\n          role: 'admin',\r\n          is_active: true,\r\n          created_at: new Date().toISOString()\r\n        };\r\n      } else if (email === 'analyst@cybershield.com') {\r\n        demoUser = {\r\n          id: 2,\r\n          email: 'analyst@cybershield.com',\r\n          username: 'analyst',\r\n          full_name: 'Security Analyst',\r\n          role: 'analyst',\r\n          is_active: true,\r\n          created_at: new Date().toISOString()\r\n        };\r\n      } else if (email === 'user@cybershield.com') {\r\n        demoUser = {\r\n          id: 3,\r\n          email: 'user@cybershield.com',\r\n          username: 'user',\r\n          full_name: 'Regular User',\r\n          role: 'user',\r\n          is_active: true,\r\n          created_at: new Date().toISOString()\r\n        };\r\n      } else {\r\n        // Any other email with password 'password' will work\r\n        demoUser = {\r\n          id: 4,\r\n          email: email,\r\n          username: email.split('@')[0],\r\n          full_name: 'Demo User',\r\n          role: 'user',\r\n          is_active: true,\r\n          created_at: new Date().toISOString()\r\n        };\r\n      }\r\n      \r\n      // Store user in localStorage for demo\r\n      localStorage.setItem('demo_user', JSON.stringify(demoUser));\r\n      localStorage.setItem('demo_authenticated', 'true');\r\n      \r\n      setUser(demoUser);\r\n      navigate('/dashboard');\r\n      \r\n    } catch (error) {\r\n      console.error('Login failed:', error);\r\n      setError('Login failed. Please try again.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem('demo_user');\r\n    localStorage.removeItem('demo_authenticated');\r\n    setUser(null);\r\n    navigate('/login');\r\n  };\r\n\r\n  const register = async (userData: RegisterData) => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      \r\n      // Simulate API delay\r\n      await new Promise(resolve => setTimeout(resolve, 1000));\r\n      \r\n      // Demo registration - just log in the user\r\n      await login(userData.email, userData.password);\r\n      \r\n    } catch (error) {\r\n      console.error('Registration failed:', error);\r\n      setError('Registration failed. Please try again.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const updateProfile = async (data: Partial<User>) => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      \r\n      // Simulate API delay\r\n      await new Promise(resolve => setTimeout(resolve, 1000));\r\n      \r\n      if (user) {\r\n        const updatedUser = { ...user, ...data };\r\n        setUser(updatedUser);\r\n        localStorage.setItem('demo_user', JSON.stringify(updatedUser));\r\n      }\r\n      \r\n    } catch (error) {\r\n      console.error('Profile update failed:', error);\r\n      setError('Profile update failed. Please try again.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Check if user is already authenticated on app load\r\n  useEffect(() => {\r\n    const demoUser = localStorage.getItem('demo_user');\r\n    const isDemoAuthenticated = localStorage.getItem('demo_authenticated');\r\n    \r\n    if (demoUser && isDemoAuthenticated === 'true') {\r\n      try {\r\n        const userData = JSON.parse(demoUser);\r\n        setUser(userData);\r\n      } catch (error) {\r\n        console.error('Error parsing demo user data:', error);\r\n        localStorage.removeItem('demo_user');\r\n        localStorage.removeItem('demo_authenticated');\r\n      }\r\n    }\r\n    \r\n    setLoading(false);\r\n  }, []);\r\n\r\n  const value: AuthContextType = {\r\n    user,\r\n    isAuthenticated: !!user,\r\n    loading,\r\n    login,\r\n    logout,\r\n    register,\r\n    updateProfile,\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}