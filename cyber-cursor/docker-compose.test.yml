version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: cybershield_postgres_test
    environment:
      POSTGRES_DB: cybershield_test
      POSTGRES_USER: cybershield
      POSTGRES_PASSWORD: cybershield123
    ports:
      - "5433:5432"
    volumes:
      - postgres_data_test:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U cybershield -d cybershield_test"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for caching and sessions
  redis:
    image: redis:7-alpine
    container_name: cybershield_redis_test
    ports:
      - "6380:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: cybershield_backend_test
    environment:
      - ENVIRONMENT=test
      - DATABASE_URL=postgresql+asyncpg://cybershield:cybershield123@postgres:5432/cybershield_test
      - REDIS_URL=redis://redis:6379
      - SECRET_KEY=test-secret-key-for-sast-testing
      - ALGORITHM=HS256
      - ACCESS_TOKEN_EXPIRE_MINUTES=30
    ports:
      - "8001:8000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./backend:/app
      - backend_logs:/app/logs
      - backend_uploads:/app/uploads
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend (optional for testing)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.production
    container_name: cybershield_frontend_test
    environment:
      - REACT_APP_API_URL=http://localhost:8001
    ports:
      - "3001:3000"
    depends_on:
      - backend

volumes:
  postgres_data_test:
  backend_logs:
  backend_uploads: 