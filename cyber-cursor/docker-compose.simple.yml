version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: cybershield-postgres
    environment:
      POSTGRES_DB: cybershield
      POSTGRES_USER: cybershield_user
      POSTGRES_PASSWORD: cybershield_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - cybershield-network
    restart: unless-stopped

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: cybershield-redis
    command: redis-server --requirepass redis_password
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - cybershield-network
    restart: unless-stopped

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.production
    container_name: cybershield-backend
    environment:
      - ENVIRONMENT=production
      - DATABASE_URL=postgresql+asyncpg://cybershield_user:cybershield_password@postgres:5432/cybershield
      - REDIS_URL=redis://:redis_password@redis:6379/0
      - SECRET_KEY=your-super-secret-production-key-change-this-immediately
      - DEBUG=false
      - LOG_LEVEL=INFO
      - ALLOWED_ORIGINS=["http://localhost:3000","http://localhost:19006","http://localhost:8081"]
    volumes:
      - ./backend:/app
      - backend_logs:/app/logs
      - backend_uploads:/app/uploads
    ports:
      - "8000:8000"
    networks:
      - cybershield-network
    depends_on:
      - postgres
      - redis
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  backend_logs:
    driver: local
  backend_uploads:
    driver: local

networks:
  cybershield-network:
    driver: bridge 